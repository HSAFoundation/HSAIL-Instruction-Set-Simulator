version 1:0:$small;

//directive
itemsperworkgroup 7, 8, 9;
workgroupspercu 8;
memopt_on;
memopt_off;
file 1 "" ;
file 2 "this is a file";

kernel &AllUp()
{
  abs_s32 $s0, $s0;
  abs_s64 $d0, $d0;
  abs_f32 $s0, $s0;
  abs_f64 $d0, $d0;
  abs_p_s8x4 $s0, $s0;
  abs_s_s8x4 $s0, $s0;
  abs_p_s8x8 $d0, $d0;
  abs_s_s8x8 $d0, $d0;
  abs_p_s16x2 $s0, $s0;
  abs_s_s16x2 $s0, $s0;
  abs_p_s16x4 $d0, $d0;
  abs_s_s16x4 $d0, $d0;
  abs_p_s32x2 $d0, $d0;
  abs_s_s32x2 $d0, $d0;
  abs_p_f32x2 $d0, $d0;
  abs_s_f32x2 $d0, $d0;
  neg_s32 $s0, $s0;
  neg_s64 $d0, $d0;
  neg_f32 $s0, $s0;
  neg_f64 $d0, $d0;
  neg_p_s8x4 $s0, $s0;
  neg_s_s8x4 $s0, $s0;
  neg_p_s8x8 $d0, $d0;
  neg_s_s8x8 $d0, $d0;
  neg_p_s16x2 $s0, $s0;
  neg_s_s16x2 $s0, $s0;
  neg_p_s16x4 $d0, $d0;
  neg_s_s16x4 $d0, $d0;
  neg_p_s32x2 $d0, $d0;
  neg_s_s32x2 $d0, $d0;
  neg_p_f32x2 $d0, $d0;
  neg_s_f32x2 $d0, $d0;
  add_s32 $s0, $s0, $s0;
  add_s64 $d0, $d0, $d0;
  add_u32 $s0, $s0, $s0;
  add_u64 $d0, $d0, $d0;
  add_f32 $s0, $s0, $s0;
  add_f64 $d0, $d0, $d0;
  add_pp_s8x4 $s0, $s0, $s0;
  add_ps_s8x4 $s0, $s0, $s0;
  add_sp_s8x4 $s0, $s0, $s0;
  add_ss_s8x4 $s0, $s0, $s0;
  add_pp_s8x8 $d0, $d0, $d0;
  add_ps_s8x8 $d0, $d0, $d0;
  add_sp_s8x8 $d0, $d0, $d0;
  add_ss_s8x8 $d0, $d0, $d0;
  add_pp_s16x2 $s0, $s0, $s0;
  add_ps_s16x2 $s0, $s0, $s0;
  add_sp_s16x2 $s0, $s0, $s0;
  add_ss_s16x2 $s0, $s0, $s0;
  add_pp_s16x4 $d0, $d0, $d0;
  add_ps_s16x4 $d0, $d0, $d0;
  add_sp_s16x4 $d0, $d0, $d0;
  add_ss_s16x4 $d0, $d0, $d0;
  add_pp_s32x2 $d0, $d0, $d0;
  add_ps_s32x2 $d0, $d0, $d0;
  add_sp_s32x2 $d0, $d0, $d0;
  add_ss_s32x2 $d0, $d0, $d0;
  add_pp_sat_s8x4 $s0, $s0, $s0;
  add_ps_sat_s8x4 $s0, $s0, $s0;
  add_sp_sat_s8x4 $s0, $s0, $s0;
  add_ss_sat_s8x4 $s0, $s0, $s0;
  add_pp_sat_s8x8 $d0, $d0, $d0;
  add_ps_sat_s8x8 $d0, $d0, $d0;
  add_sp_sat_s8x8 $d0, $d0, $d0;
  add_ss_sat_s8x8 $d0, $d0, $d0;
  add_pp_sat_s16x2 $s0, $s0, $s0;
  add_ps_sat_s16x2 $s0, $s0, $s0;
  add_sp_sat_s16x2 $s0, $s0, $s0;
  add_ss_sat_s16x2 $s0, $s0, $s0;
  add_pp_sat_s16x4 $d0, $d0, $d0;
  add_ps_sat_s16x4 $d0, $d0, $d0;
  add_sp_sat_s16x4 $d0, $d0, $d0;
  add_ss_sat_s16x4 $d0, $d0, $d0;
  add_pp_sat_s32x2 $d0, $d0, $d0;
  add_ps_sat_s32x2 $d0, $d0, $d0;
  add_sp_sat_s32x2 $d0, $d0, $d0;
  add_ss_sat_s32x2 $d0, $d0, $d0;
  add_pp_sat_u8x4 $s0, $s0, $s0;
  add_ps_sat_u8x4 $s0, $s0, $s0;
  add_sp_sat_u8x4 $s0, $s0, $s0;
  add_ss_sat_u8x4 $s0, $s0, $s0;
  add_pp_sat_u8x8 $d0, $d0, $d0;
  add_ps_sat_u8x8 $d0, $d0, $d0;
  add_sp_sat_u8x8 $d0, $d0, $d0;
  add_ss_sat_u8x8 $d0, $d0, $d0;
  add_pp_sat_u16x2 $s0, $s0, $s0;
  add_ps_sat_u16x2 $s0, $s0, $s0;
  add_sp_sat_u16x2 $s0, $s0, $s0;
  add_ss_sat_u16x2 $s0, $s0, $s0;
  add_pp_sat_u16x4 $d0, $d0, $d0;
  add_ps_sat_u16x4 $d0, $d0, $d0;
  add_sp_sat_u16x4 $d0, $d0, $d0;
  add_ss_sat_u16x4 $d0, $d0, $d0;
  add_pp_sat_u32x2 $d0, $d0, $d0;
  add_ps_sat_u32x2 $d0, $d0, $d0;
  add_sp_sat_u32x2 $d0, $d0, $d0;
  add_ss_sat_u32x2 $d0, $d0, $d0;
  div_s32 $s0, $s0, $s0;
  div_s64 $d0, $d0, $d0;
  div_u32 $s0, $s0, $s0;
  div_u64 $d0, $d0, $d0;
  div_f32 $s0, $s0, $s0;
  div_f64 $d0, $d0, $d0;
  mul_s32 $s0, $s0, $s0;
  mul_s64 $d0, $d0, $d0;
  mul_u32 $s0, $s0, $s0;
  mul_u64 $d0, $d0, $d0;
  mul_f32 $s0, $s0, $s0;
  mul_f64 $d0, $d0, $d0;
  mul_pp_s8x4 $s0, $s0, $s0;
  mul_ps_s8x4 $s0, $s0, $s0;
  mul_sp_s8x4 $s0, $s0, $s0;
  mul_ss_s8x4 $s0, $s0, $s0;
  mul_pp_s8x8 $d0, $d0, $d0;
  mul_ps_s8x8 $d0, $d0, $d0;
  mul_sp_s8x8 $d0, $d0, $d0;
  mul_ss_s8x8 $d0, $d0, $d0;
  mul_pp_s16x2 $s0, $s0, $s0;
  mul_ps_s16x2 $s0, $s0, $s0;
  mul_sp_s16x2 $s0, $s0, $s0;
  mul_ss_s16x2 $s0, $s0, $s0;
  mul_pp_s16x4 $d0, $d0, $d0;
  mul_ps_s16x4 $d0, $d0, $d0;
  mul_sp_s16x4 $d0, $d0, $d0;
  mul_ss_s16x4 $d0, $d0, $d0;
  mul_pp_s32x2 $d0, $d0, $d0;
  mul_ps_s32x2 $d0, $d0, $d0;
  mul_sp_s32x2 $d0, $d0, $d0;
  mul_ss_s32x2 $d0, $d0, $d0;
  mul_pp_u8x4 $s0, $s0, $s0;
  mul_ps_u8x4 $s0, $s0, $s0;
  mul_sp_u8x4 $s0, $s0, $s0;
  mul_ss_u8x4 $s0, $s0, $s0;
  mul_pp_u8x8 $d0, $d0, $d0;
  mul_ps_u8x8 $d0, $d0, $d0;
  mul_sp_u8x8 $d0, $d0, $d0;
  mul_ss_u8x8 $d0, $d0, $d0;
  mul_pp_u16x2 $s0, $s0, $s0;
  mul_ps_u16x2 $s0, $s0, $s0;
  mul_sp_u16x2 $s0, $s0, $s0;
  mul_ss_u16x2 $s0, $s0, $s0;
  mul_pp_u16x4 $d0, $d0, $d0;
  mul_ps_u16x4 $d0, $d0, $d0;
  mul_sp_u16x4 $d0, $d0, $d0;
  mul_ss_u16x4 $d0, $d0, $d0;
  mul_pp_u32x2 $d0, $d0, $d0;
  mul_ps_u32x2 $d0, $d0, $d0;
  mul_sp_u32x2 $d0, $d0, $d0;
  mul_ss_u32x2 $d0, $d0, $d0;
  mul_pp_f32x2 $d0, $d0, $d0;
  mul_ps_f32x2 $d0, $d0, $d0;
  mul_sp_f32x2 $d0, $d0, $d0;
  mul_ss_f32x2 $d0, $d0, $d0;
  mul_pp_sat_s8x4 $s0, $s0, $s0;
  mul_ps_sat_s8x4 $s0, $s0, $s0;
  mul_sp_sat_s8x4 $s0, $s0, $s0;
  mul_ss_sat_s8x4 $s0, $s0, $s0;
  mul_pp_sat_s8x8 $d0, $d0, $d0;
  mul_ps_sat_s8x8 $d0, $d0, $d0;
  mul_sp_sat_s8x8 $d0, $d0, $d0;
  mul_ss_sat_s8x8 $d0, $d0, $d0;
  mul_pp_sat_s16x2 $s0, $s0, $s0;
  mul_ps_sat_s16x2 $s0, $s0, $s0;
  mul_sp_sat_s16x2 $s0, $s0, $s0;
  mul_ss_sat_s16x2 $s0, $s0, $s0;
  mul_pp_sat_s16x4 $d0, $d0, $d0;
  mul_ps_sat_s16x4 $d0, $d0, $d0;
  mul_sp_sat_s16x4 $d0, $d0, $d0;
  mul_ss_sat_s16x4 $d0, $d0, $d0;
  mul_pp_sat_s32x2 $d0, $d0, $d0;
  mul_ps_sat_s32x2 $d0, $d0, $d0;
  mul_sp_sat_s32x2 $d0, $d0, $d0;
  mul_ss_sat_s32x2 $d0, $d0, $d0;
  mul_pp_sat_u8x4 $s0, $s0, $s0;
  mul_ps_sat_u8x4 $s0, $s0, $s0;
  mul_sp_sat_u8x4 $s0, $s0, $s0;
  mul_ss_sat_u8x4 $s0, $s0, $s0;
  mul_pp_sat_u8x8 $d0, $d0, $d0;
  mul_ps_sat_u8x8 $d0, $d0, $d0;
  mul_sp_sat_u8x8 $d0, $d0, $d0;
  mul_ss_sat_u8x8 $d0, $d0, $d0;
  mul_pp_sat_u16x2 $s0, $s0, $s0;
  mul_ps_sat_u16x2 $s0, $s0, $s0;
  mul_sp_sat_u16x2 $s0, $s0, $s0;
  mul_ss_sat_u16x2 $s0, $s0, $s0;
  mul_pp_sat_u16x4 $d0, $d0, $d0;
  mul_ps_sat_u16x4 $d0, $d0, $d0;
  mul_sp_sat_u16x4 $d0, $d0, $d0;
  mul_ss_sat_u16x4 $d0, $d0, $d0;
  mul_pp_sat_u32x2 $d0, $d0, $d0;
  mul_ps_sat_u32x2 $d0, $d0, $d0;
  mul_sp_sat_u32x2 $d0, $d0, $d0;
  mul_ss_sat_u32x2 $d0, $d0, $d0;
  mul_hi_s32 $s0, $s0, $s0;
  mul_hi_u32 $s0, $s0, $s0;
  mul_hi_pp_s8x4 $s0, $s0, $s0;
  mul_hi_ps_s8x4 $s0, $s0, $s0;
  mul_hi_sp_s8x4 $s0, $s0, $s0;
  mul_hi_ss_s8x4 $s0, $s0, $s0;
  mul_hi_pp_s8x8 $d0, $d0, $d0;
  mul_hi_ps_s8x8 $d0, $d0, $d0;
  mul_hi_sp_s8x8 $d0, $d0, $d0;
  mul_hi_ss_s8x8 $d0, $d0, $d0;
  mul_hi_pp_s16x2 $s0, $s0, $s0;
  mul_hi_ps_s16x2 $s0, $s0, $s0;
  mul_hi_sp_s16x2 $s0, $s0, $s0;
  mul_hi_ss_s16x2 $s0, $s0, $s0;
  mul_hi_pp_s16x4 $d0, $d0, $d0;
  mul_hi_ps_s16x4 $d0, $d0, $d0;
  mul_hi_sp_s16x4 $d0, $d0, $d0;
  mul_hi_ss_s16x4 $d0, $d0, $d0;
  mul_hi_pp_s32x2 $d0, $d0, $d0;
  mul_hi_ps_s32x2 $d0, $d0, $d0;
  mul_hi_sp_s32x2 $d0, $d0, $d0;
  mul_hi_ss_s32x2 $d0, $d0, $d0;
  mul_hi_pp_u8x4 $s0, $s0, $s0;
  mul_hi_ps_u8x4 $s0, $s0, $s0;
  mul_hi_sp_u8x4 $s0, $s0, $s0;
  mul_hi_ss_u8x4 $s0, $s0, $s0;
  mul_hi_pp_u8x8 $d0, $d0, $d0;
  mul_hi_ps_u8x8 $d0, $d0, $d0;
  mul_hi_sp_u8x8 $d0, $d0, $d0;
  mul_hi_ss_u8x8 $d0, $d0, $d0;
  mul_hi_pp_u16x2 $s0, $s0, $s0;
  mul_hi_ps_u16x2 $s0, $s0, $s0;
  mul_hi_sp_u16x2 $s0, $s0, $s0;
  mul_hi_ss_u16x2 $s0, $s0, $s0;
  mul_hi_pp_u16x4 $d0, $d0, $d0;
  mul_hi_ps_u16x4 $d0, $d0, $d0;
  mul_hi_sp_u16x4 $d0, $d0, $d0;
  mul_hi_ss_u16x4 $d0, $d0, $d0;
  mul_hi_pp_u32x2 $d0, $d0, $d0;
  mul_hi_ps_u32x2 $d0, $d0, $d0;
  mul_hi_sp_u32x2 $d0, $d0, $d0;
  mul_hi_ss_u32x2 $d0, $d0, $d0;
  sub_s32 $s0, $s0, $s0;
  sub_s64 $d0, $d0, $d0;
  sub_u32 $s0, $s0, $s0;
  sub_u64 $d0, $d0, $d0;
  sub_f32 $s0, $s0, $s0;
  sub_f64 $d0, $d0, $d0;
  sub_pp_s8x4 $s0, $s0, $s0;
  sub_ps_s8x4 $s0, $s0, $s0;
  sub_sp_s8x4 $s0, $s0, $s0;
  sub_ss_s8x4 $s0, $s0, $s0;
  sub_pp_s8x8 $d0, $d0, $d0;
  sub_ps_s8x8 $d0, $d0, $d0;
  sub_sp_s8x8 $d0, $d0, $d0;
  sub_ss_s8x8 $d0, $d0, $d0;
  sub_pp_s16x2 $s0, $s0, $s0;
  sub_ps_s16x2 $s0, $s0, $s0;
  sub_sp_s16x2 $s0, $s0, $s0;
  sub_ss_s16x2 $s0, $s0, $s0;
  sub_pp_s16x4 $d0, $d0, $d0;
  sub_ps_s16x4 $d0, $d0, $d0;
  sub_sp_s16x4 $d0, $d0, $d0;
  sub_ss_s16x4 $d0, $d0, $d0;
  sub_pp_s32x2 $d0, $d0, $d0;
  sub_ps_s32x2 $d0, $d0, $d0;
  sub_sp_s32x2 $d0, $d0, $d0;
  sub_ss_s32x2 $d0, $d0, $d0;
  sub_pp_u8x4 $s0, $s0, $s0;
  sub_ps_u8x4 $s0, $s0, $s0;
  sub_sp_u8x4 $s0, $s0, $s0;
  sub_ss_u8x4 $s0, $s0, $s0;
  sub_pp_u8x8 $d0, $d0, $d0;
  sub_ps_u8x8 $d0, $d0, $d0;
  sub_sp_u8x8 $d0, $d0, $d0;
  sub_ss_u8x8 $d0, $d0, $d0;
  sub_pp_u16x2 $s0, $s0, $s0;
  sub_ps_u16x2 $s0, $s0, $s0;
  sub_sp_u16x2 $s0, $s0, $s0;
  sub_ss_u16x2 $s0, $s0, $s0;
  sub_pp_u16x4 $d0, $d0, $d0;
  sub_ps_u16x4 $d0, $d0, $d0;
  sub_sp_u16x4 $d0, $d0, $d0;
  sub_ss_u16x4 $d0, $d0, $d0;
  sub_pp_u32x2 $d0, $d0, $d0;
  sub_ps_u32x2 $d0, $d0, $d0;
  sub_sp_u32x2 $d0, $d0, $d0;
  sub_ss_u32x2 $d0, $d0, $d0;
  sub_pp_f32x2 $d0, $d0, $d0;
  sub_ps_f32x2 $d0, $d0, $d0;
  sub_sp_f32x2 $d0, $d0, $d0;
  sub_ss_f32x2 $d0, $d0, $d0;
  sub_pp_sat_s8x4 $s0, $s0, $s0;
  sub_ps_sat_s8x4 $s0, $s0, $s0;
  sub_sp_sat_s8x4 $s0, $s0, $s0;
  sub_ss_sat_s8x4 $s0, $s0, $s0;
  sub_pp_sat_s8x8 $d0, $d0, $d0;
  sub_ps_sat_s8x8 $d0, $d0, $d0;
  sub_sp_sat_s8x8 $d0, $d0, $d0;
  sub_ss_sat_s8x8 $d0, $d0, $d0;
  sub_pp_sat_s16x2 $s0, $s0, $s0;
  sub_ps_sat_s16x2 $s0, $s0, $s0;
  sub_sp_sat_s16x2 $s0, $s0, $s0;
  sub_ss_sat_s16x2 $s0, $s0, $s0;
  sub_pp_sat_s16x4 $d0, $d0, $d0;
  sub_ps_sat_s16x4 $d0, $d0, $d0;
  sub_sp_sat_s16x4 $d0, $d0, $d0;
  sub_ss_sat_s16x4 $d0, $d0, $d0;
  sub_pp_sat_s32x2 $d0, $d0, $d0;
  sub_ps_sat_s32x2 $d0, $d0, $d0;
  sub_sp_sat_s32x2 $d0, $d0, $d0;
  sub_ss_sat_s32x2 $d0, $d0, $d0;
  sub_pp_sat_u8x4 $s0, $s0, $s0;
  sub_ps_sat_u8x4 $s0, $s0, $s0;
  sub_sp_sat_u8x4 $s0, $s0, $s0;
  sub_ss_sat_u8x4 $s0, $s0, $s0;
  sub_pp_sat_u8x8 $d0, $d0, $d0;
  sub_ps_sat_u8x8 $d0, $d0, $d0;
  sub_sp_sat_u8x8 $d0, $d0, $d0;
  sub_ss_sat_u8x8 $d0, $d0, $d0;
  sub_pp_sat_u16x2 $s0, $s0, $s0;
  sub_ps_sat_u16x2 $s0, $s0, $s0;
  sub_sp_sat_u16x2 $s0, $s0, $s0;
  sub_ss_sat_u16x2 $s0, $s0, $s0;
  sub_pp_sat_u16x4 $d0, $d0, $d0;
  sub_ps_sat_u16x4 $d0, $d0, $d0;
  sub_sp_sat_u16x4 $d0, $d0, $d0;
  sub_ss_sat_u16x4 $d0, $d0, $d0;
  sub_pp_sat_u32x2 $d0, $d0, $d0;
  sub_ps_sat_u32x2 $d0, $d0, $d0;
  sub_sp_sat_u32x2 $d0, $d0, $d0;
  sub_ss_sat_u32x2 $d0, $d0, $d0;
  max_s32 $s0, $s0, $s0;
  max_s64 $d0, $d0, $d0;
  max_u32 $s0, $s0, $s0;
  max_u64 $d0, $d0, $d0;
  max_f32 $s0, $s0, $s0;
  max_f64 $d0, $d0, $d0;
  max_pp_s8x4 $s0, $s0, $s0;
  max_ps_s8x4 $s0, $s0, $s0;
  max_sp_s8x4 $s0, $s0, $s0;
  max_ss_s8x4 $s0, $s0, $s0;
  max_pp_s8x8 $d0, $d0, $d0;
  max_ps_s8x8 $d0, $d0, $d0;
  max_sp_s8x8 $d0, $d0, $d0;
  max_ss_s8x8 $d0, $d0, $d0;
  max_pp_s16x2 $s0, $s0, $s0;
  max_ps_s16x2 $s0, $s0, $s0;
  max_sp_s16x2 $s0, $s0, $s0;
  max_ss_s16x2 $s0, $s0, $s0;
  max_pp_s16x4 $d0, $d0, $d0;
  max_ps_s16x4 $d0, $d0, $d0;
  max_sp_s16x4 $d0, $d0, $d0;
  max_ss_s16x4 $d0, $d0, $d0;
  max_pp_s32x2 $d0, $d0, $d0;
  max_ps_s32x2 $d0, $d0, $d0;
  max_sp_s32x2 $d0, $d0, $d0;
  max_ss_s32x2 $d0, $d0, $d0;
  max_pp_u8x4 $s0, $s0, $s0;
  max_ps_u8x4 $s0, $s0, $s0;
  max_sp_u8x4 $s0, $s0, $s0;
  max_ss_u8x4 $s0, $s0, $s0;
  max_pp_u8x8 $d0, $d0, $d0;
  max_ps_u8x8 $d0, $d0, $d0;
  max_sp_u8x8 $d0, $d0, $d0;
  max_ss_u8x8 $d0, $d0, $d0;
  max_pp_u16x2 $s0, $s0, $s0;
  max_ps_u16x2 $s0, $s0, $s0;
  max_sp_u16x2 $s0, $s0, $s0;
  max_ss_u16x2 $s0, $s0, $s0;
  max_pp_u16x4 $d0, $d0, $d0;
  max_ps_u16x4 $d0, $d0, $d0;
  max_sp_u16x4 $d0, $d0, $d0;
  max_ss_u16x4 $d0, $d0, $d0;
  max_pp_u32x2 $d0, $d0, $d0;
  max_ps_u32x2 $d0, $d0, $d0;
  max_sp_u32x2 $d0, $d0, $d0;
  max_ss_u32x2 $d0, $d0, $d0;
  max_pp_f32x2 $d0, $d0, $d0;
  max_ps_f32x2 $d0, $d0, $d0;
  max_sp_f32x2 $d0, $d0, $d0;
  max_ss_f32x2 $d0, $d0, $d0;
  min_s32 $s0, $s0, $s0;
  min_s64 $d0, $d0, $d0;
  min_u32 $s0, $s0, $s0;
  min_u64 $d0, $d0, $d0;
  min_f32 $s0, $s0, $s0;
  min_f64 $d0, $d0, $d0;
  min_pp_s8x4 $s0, $s0, $s0;
  min_ps_s8x4 $s0, $s0, $s0;
  min_sp_s8x4 $s0, $s0, $s0;
  min_ss_s8x4 $s0, $s0, $s0;
  min_pp_s8x8 $d0, $d0, $d0;
  min_ps_s8x8 $d0, $d0, $d0;
  min_sp_s8x8 $d0, $d0, $d0;
  min_ss_s8x8 $d0, $d0, $d0;
  min_pp_s16x2 $s0, $s0, $s0;
  min_ps_s16x2 $s0, $s0, $s0;
  min_sp_s16x2 $s0, $s0, $s0;
  min_ss_s16x2 $s0, $s0, $s0;
  min_pp_s16x4 $d0, $d0, $d0;
  min_ps_s16x4 $d0, $d0, $d0;
  min_sp_s16x4 $d0, $d0, $d0;
  min_ss_s16x4 $d0, $d0, $d0;
  min_pp_s32x2 $d0, $d0, $d0;
  min_ps_s32x2 $d0, $d0, $d0;
  min_sp_s32x2 $d0, $d0, $d0;
  min_ss_s32x2 $d0, $d0, $d0;
  min_pp_u8x4 $s0, $s0, $s0;
  min_ps_u8x4 $s0, $s0, $s0;
  min_sp_u8x4 $s0, $s0, $s0;
  min_ss_u8x4 $s0, $s0, $s0;
  min_pp_u8x8 $d0, $d0, $d0;
  min_ps_u8x8 $d0, $d0, $d0;
  min_sp_u8x8 $d0, $d0, $d0;
  min_ss_u8x8 $d0, $d0, $d0;
  min_pp_u16x2 $s0, $s0, $s0;
  min_ps_u16x2 $s0, $s0, $s0;
  min_sp_u16x2 $s0, $s0, $s0;
  min_ss_u16x2 $s0, $s0, $s0;
  min_pp_u16x4 $d0, $d0, $d0;
  min_ps_u16x4 $d0, $d0, $d0;
  min_sp_u16x4 $d0, $d0, $d0;
  min_ss_u16x4 $d0, $d0, $d0;
  min_pp_u32x2 $d0, $d0, $d0;
  min_ps_u32x2 $d0, $d0, $d0;
  min_sp_u32x2 $d0, $d0, $d0;
  min_ss_u32x2 $d0, $d0, $d0;
  min_pp_f32x2 $d0, $d0, $d0;
  min_ps_f32x2 $d0, $d0, $d0;
  min_sp_f32x2 $d0, $d0, $d0;
  min_ss_f32x2 $d0, $d0, $d0;
  rem_s32 $s0, $s0, $s0;
  rem_s64 $d0, $d0, $d0;
  rem_u32 $s0, $s0, $s0;
  rem_u64 $d0, $d0, $d0;
  carry_s32 $s0, $s0, $s0;
  carry_s64 $d0, $d0, $d0;
  carry_u32 $s0, $s0, $s0;
  carry_u64 $d0, $d0, $d0;
  borrow_s32 $s0, $s0, $s0;
  borrow_s64 $d0, $d0, $d0;
  borrow_u32 $s0, $s0, $s0;
  borrow_u64 $d0, $d0, $d0;
  mad_s32 $s0, $s0, $s0, $s0;
  mad_s64 $d0, $d0, $d0, $d0;
  mad_u32 $s0, $s0, $s0, $s0;
  mad_u64 $d0, $d0, $d0, $d0;
  mad_f32 $s0, $s0, $s0, $s0;
  mad_f64 $d0, $d0, $d0, $d0;
  mul24_s32 $s0, $s0, $s0;
  mul24_s64 $d0, $d0, $d0;
  mul24_u32 $s0, $s0, $s0;
  mul24_u64 $d0, $d0, $d0;
  mul24_hi_s32 $s0, $s0, $s0;
  mul24_hi_s64 $d0, $d0, $d0;
  mul24_hi_u32 $s0, $s0, $s0;
  mul24_hi_u64 $d0, $d0, $d0;
  mad24_s32 $s0, $s0, $s0, $s0;
  mad24_s64 $d0, $d0, $d0, $d0;
  mad24_u32 $s0, $s0, $s0, $s0;
  mad24_u64 $d0, $d0, $d0, $d0;
  mad24_hi_s32 $s0, $s0, $s0, $s0;
  mad24_hi_s64 $d0, $d0, $d0, $d0;
  mad24_hi_u32 $s0, $s0, $s0, $s0;
  mad24_hi_u64 $d0, $d0, $d0, $d0;
  shl_s32 $s0, $s0, $s0;
  shl_u32 $s0, $s0, $s0;
  shl_s64 $d0, $d0, $s0;
  shl_u64 $d0, $d0, $s0;
  shl_s8x4 $s0, $s0, $s0;
  shl_s8x8 $d0, $d0, $s0;
  shl_s16x2 $s0, $s0, $s0;
  shl_s16x4 $d0, $d0, $s0;
  shl_s32x2 $d0, $d0, $s0;
  shl_u8x4 $s0, $s0, $s0;
  shl_u8x8 $d0, $d0, $s0;
  shl_u16x2 $s0, $s0, $s0;
  shl_u16x4 $d0, $d0, $s0;
  shl_u32x2 $d0, $d0, $s0;
  shr_s32 $s0, $s0, $s0;
  shr_u32 $s0, $s0, $s0;
  shr_s64 $d0, $d0, $s0;
  shr_u64 $d0, $d0, $s0;
  shr_s8x4 $s0, $s0, $s0;
  shr_s8x8 $d0, $d0, $s0;
  shr_s16x2 $s0, $s0, $s0;
  shr_s16x4 $d0, $d0, $s0;
  shr_s32x2 $d0, $d0, $s0;
  shr_u8x4 $s0, $s0, $s0;
  shr_u8x8 $d0, $d0, $s0;
  shr_u16x2 $s0, $s0, $s0;
  shr_u16x4 $d0, $d0, $s0;
  shr_u32x2 $d0, $d0, $s0;
  unpacklo_s8x4 $s0, $s0, $s0;
  unpacklo_s8x8 $d0, $d0, $d0;
  unpacklo_s16x2 $s0, $s0, $s0;
  unpacklo_s16x4 $d0, $d0, $d0;
  unpacklo_s32x2 $d0, $d0, $d0;
  unpacklo_u8x4 $s0, $s0, $s0;
  unpacklo_u8x8 $d0, $d0, $d0;
  unpacklo_u16x2 $s0, $s0, $s0;
  unpacklo_u16x4 $d0, $d0, $d0;
  unpacklo_u32x2 $d0, $d0, $d0;
  unpacklo_f32x2 $d0, $d0, $d0;
  unpackhi_s8x4 $s0, $s0, $s0;
  unpackhi_s8x8 $d0, $d0, $d0;
  unpackhi_s16x2 $s0, $s0, $s0;
  unpackhi_s16x4 $d0, $d0, $d0;
  unpackhi_s32x2 $d0, $d0, $d0;
  unpackhi_u8x4 $s0, $s0, $s0;
  unpackhi_u8x8 $d0, $d0, $d0;
  unpackhi_u16x2 $s0, $s0, $s0;
  unpackhi_u16x4 $d0, $d0, $d0;
  unpackhi_u32x2 $d0, $d0, $d0;
  unpackhi_f32x2 $d0, $d0, $d0;
  and_b1 $c0, $c0, $c0;
  and_b32 $s0, $s0, $s0;
  and_b64 $d0, $d0, $d0;
  or_b1 $c0, $c0, $c0;
  or_b32 $s0, $s0, $s0;
  or_b64 $d0, $d0, $d0;
  xor_b1 $c0, $c0, $c0;
  xor_b32 $s0, $s0, $s0;
  xor_b64 $d0, $d0, $d0;
  not_b1 $c0, $c0;
  not_b32 $s0, $s0;
  not_b64 $d0, $d0;
  popcount_b32 $s0, $s0;
  popcount_b64 $s0, $d0;
  bitrev_b32 $s0, $s0;
  bitrev_b64 $d0, $d0;
  extract_b32 $s0, $s0, $s0, $s0;
  extract_b64 $d0, $d0, $s0, $s0;
  insert_b32 $s0, $s0, $s0, $s0;
  insert_b64 $d0, $d0, $d0, $d0;
  bitselect_b32 $s0, $s0, $s0, $s0;
  bitselect_b64 $d0, $d0, $d0, $d0;
  firstbit_b32 $s0, $s0;
  firstbit_b64 $s0, $d0;
  lastbit_b32 $s0, $s0;
  lastbit_b64 $s0, $d0;
  movs_lo_b32 $s0, $d0;
  movs_hi_b32 $s0, $d0;
  movd_lo_b64 $d0, $d0, $s0;
  movd_hi_b64 $d0, $d0, $s0;
  shuffle_s8x4 $s0, $s0, $s0, 0;
  shuffle_s8x8 $d0, $d0, $d0, 0;
  shuffle_s16x2 $s0, $s0, $s0, 0;
  shuffle_s16x4 $d0, $d0, $d0, 0;
  shuffle_s32x2 $d0, $d0, $d0, 0;
  shuffle_u8x4 $s0, $s0, $s0, 0;
  shuffle_u8x8 $d0, $d0, $d0, 0;
  shuffle_u16x2 $s0, $s0, $s0, 0;
  shuffle_u16x4 $d0, $d0, $d0, 0;
  shuffle_u32x2 $d0, $d0, $d0, 0;
  shuffle_f32x2 $d0, $d0, $d0, 0;
  cmov_b1 $c0, $c0, $c0, $c0;
  cmov_b32 $s0, $c0, $s0, $s0;
  cmov_b64 $d0, $c0, $d0, $d0;
  fract_f32 $s0, $s0;
  fract_f64 $d0, $d0;
  sqrt_f32 $s0, $s0;
  sqrt_f64 $d0, $d0;
  fma_f32 $s0, $s0, $s0, $s0;
  fma_f64 $d0, $d0, $d0, $d0;
  copysign_f32 $s0, $s0, $s0;
  copysign_f64 $d0, $d0, $d0;
  fcos_f32 $s0, $s0;
  fsin_f32 $s0, $s0;
  flog2_f32 $s0, $s0;
  fexp2_f32 $s0, $s0;
  frsqrt_f32 $s0, $s0;
  frsqrt_f64 $d0, $d0;
  frcp_f32 $s0, $s0;
  frcp_f64 $d0, $d0;
  f2u4_u32 $s0, $s0, $s0, $s0, $s0;
  unpack3 $s0, $s0;
  unpack2 $s0, $s0;
  unpack1 $s0, $s0;
  unpack0 $s0, $s0;
  bitalign_b32 $s0, $s0, $s0, $s0;
  bytealign_b32 $s0, $s0, $s0, $s0;
  lerp_b32 $s0, $s0, $s0, $s0;
  sad_b32 $s0, $s0, $s0, $s0;
  sad2_b32 $s0, $s0, $s0, $s0;
  sad4_b32 $s0, $s0, $s0, $s0;
  sad4hi_b32 $s0, $s0, $s0, $s0;
  cmp_eq_b1_b32 $c0, $s0, $s0;
  cmp_eq_b32_b32 $s0, $s0, $s0;
  cmp_eq_s32_b32 $s0, $s0, $s0;
  cmp_eq_u32_b32 $s0, $s0, $s0;
  cmp_eq_f32_b32 $s0, $s0, $s0;
  cmp_eq_b1_b64 $c0, $d0, $d0;
  cmp_eq_b32_b64 $s0, $d0, $d0;
  cmp_eq_s32_b64 $s0, $d0, $d0;
  cmp_eq_u32_b64 $s0, $d0, $d0;
  cmp_eq_f32_b64 $s0, $d0, $d0;
  cmp_eq_b1_s32 $c0, $s0, $s0;
  cmp_eq_b32_s32 $s0, $s0, $s0;
  cmp_eq_s32_s32 $s0, $s0, $s0;
  cmp_eq_u32_s32 $s0, $s0, $s0;
  cmp_eq_f32_s32 $s0, $s0, $s0;
  cmp_eq_b1_s64 $c0, $d0, $d0;
  cmp_eq_b32_s64 $s0, $d0, $d0;
  cmp_eq_s32_s64 $s0, $d0, $d0;
  cmp_eq_u32_s64 $s0, $d0, $d0;
  cmp_eq_f32_s64 $s0, $d0, $d0;
  cmp_eq_b1_u32 $c0, $s0, $s0;
  cmp_eq_b32_u32 $s0, $s0, $s0;
  cmp_eq_s32_u32 $s0, $s0, $s0;
  cmp_eq_u32_u32 $s0, $s0, $s0;
  cmp_eq_f32_u32 $s0, $s0, $s0;
  cmp_eq_b1_u64 $c0, $d0, $d0;
  cmp_eq_b32_u64 $s0, $d0, $d0;
  cmp_eq_s32_u64 $s0, $d0, $d0;
  cmp_eq_u32_u64 $s0, $d0, $d0;
  cmp_eq_f32_u64 $s0, $d0, $d0;
  cmp_eq_b1_f32 $c0, $s0, $s0;
  cmp_eq_b32_f32 $s0, $s0, $s0;
  cmp_eq_s32_f32 $s0, $s0, $s0;
  cmp_eq_u32_f32 $s0, $s0, $s0;
  cmp_eq_f32_f32 $s0, $s0, $s0;
  cmp_seq_b1_f32 $c0, $s0, $s0;
  cmp_seq_b32_f32 $s0, $s0, $s0;
  cmp_seq_s32_f32 $s0, $s0, $s0;
  cmp_seq_u32_f32 $s0, $s0, $s0;
  cmp_seq_f32_f32 $s0, $s0, $s0;
  cmp_equ_b1_f32 $c0, $s0, $s0;
  cmp_equ_b32_f32 $s0, $s0, $s0;
  cmp_equ_s32_f32 $s0, $s0, $s0;
  cmp_equ_u32_f32 $s0, $s0, $s0;
  cmp_equ_f32_f32 $s0, $s0, $s0;
  cmp_sequ_b1_f32 $c0, $s0, $s0;
  cmp_sequ_b32_f32 $s0, $s0, $s0;
  cmp_sequ_s32_f32 $s0, $s0, $s0;
  cmp_sequ_u32_f32 $s0, $s0, $s0;
  cmp_sequ_f32_f32 $s0, $s0, $s0;
  cmp_eq_b1_f64 $c0, $d0, $d0;
  cmp_eq_b32_f64 $s0, $d0, $d0;
  cmp_eq_s32_f64 $s0, $d0, $d0;
  cmp_eq_u32_f64 $s0, $d0, $d0;
  cmp_eq_f32_f64 $s0, $d0, $d0;
  cmp_seq_b1_f64 $c0, $d0, $d0;
  cmp_seq_b32_f64 $s0, $d0, $d0;
  cmp_seq_s32_f64 $s0, $d0, $d0;
  cmp_seq_u32_f64 $s0, $d0, $d0;
  cmp_seq_f32_f64 $s0, $d0, $d0;
  cmp_equ_b1_f64 $c0, $d0, $d0;
  cmp_equ_b32_f64 $s0, $d0, $d0;
  cmp_equ_s32_f64 $s0, $d0, $d0;
  cmp_equ_u32_f64 $s0, $d0, $d0;
  cmp_equ_f32_f64 $s0, $d0, $d0;
  cmp_sequ_b1_f64 $c0, $d0, $d0;
  cmp_sequ_b32_f64 $s0, $d0, $d0;
  cmp_sequ_s32_f64 $s0, $d0, $d0;
  cmp_sequ_u32_f64 $s0, $d0, $d0;
  cmp_sequ_f32_f64 $s0, $d0, $d0;
  cmp_ne_b1_b32 $c0, $s0, $s0;
  cmp_ne_b32_b32 $s0, $s0, $s0;
  cmp_ne_s32_b32 $s0, $s0, $s0;
  cmp_ne_u32_b32 $s0, $s0, $s0;
  cmp_ne_f32_b32 $s0, $s0, $s0;
  cmp_ne_b1_b64 $c0, $d0, $d0;
  cmp_ne_b32_b64 $s0, $d0, $d0;
  cmp_ne_s32_b64 $s0, $d0, $d0;
  cmp_ne_u32_b64 $s0, $d0, $d0;
  cmp_ne_f32_b64 $s0, $d0, $d0;
  cmp_ne_b1_s32 $c0, $s0, $s0;
  cmp_ne_b32_s32 $s0, $s0, $s0;
  cmp_ne_s32_s32 $s0, $s0, $s0;
  cmp_ne_u32_s32 $s0, $s0, $s0;
  cmp_ne_f32_s32 $s0, $s0, $s0;
  cmp_ne_b1_s64 $c0, $d0, $d0;
  cmp_ne_b32_s64 $s0, $d0, $d0;
  cmp_ne_s32_s64 $s0, $d0, $d0;
  cmp_ne_u32_s64 $s0, $d0, $d0;
  cmp_ne_f32_s64 $s0, $d0, $d0;
  cmp_ne_b1_u32 $c0, $s0, $s0;
  cmp_ne_b32_u32 $s0, $s0, $s0;
  cmp_ne_s32_u32 $s0, $s0, $s0;
  cmp_ne_u32_u32 $s0, $s0, $s0;
  cmp_ne_f32_u32 $s0, $s0, $s0;
  cmp_ne_b1_u64 $c0, $d0, $d0;
  cmp_ne_b32_u64 $s0, $d0, $d0;
  cmp_ne_s32_u64 $s0, $d0, $d0;
  cmp_ne_u32_u64 $s0, $d0, $d0;
  cmp_ne_f32_u64 $s0, $d0, $d0;
  cmp_ne_b1_f32 $c0, $s0, $s0;
  cmp_ne_b32_f32 $s0, $s0, $s0;
  cmp_ne_s32_f32 $s0, $s0, $s0;
  cmp_ne_u32_f32 $s0, $s0, $s0;
  cmp_ne_f32_f32 $s0, $s0, $s0;
  cmp_sne_b1_f32 $c0, $s0, $s0;
  cmp_sne_b32_f32 $s0, $s0, $s0;
  cmp_sne_s32_f32 $s0, $s0, $s0;
  cmp_sne_u32_f32 $s0, $s0, $s0;
  cmp_sne_f32_f32 $s0, $s0, $s0;
  cmp_neu_b1_f32 $c0, $s0, $s0;
  cmp_neu_b32_f32 $s0, $s0, $s0;
  cmp_neu_s32_f32 $s0, $s0, $s0;
  cmp_neu_u32_f32 $s0, $s0, $s0;
  cmp_neu_f32_f32 $s0, $s0, $s0;
  cmp_sneu_b1_f32 $c0, $s0, $s0;
  cmp_sneu_b32_f32 $s0, $s0, $s0;
  cmp_sneu_s32_f32 $s0, $s0, $s0;
  cmp_sneu_u32_f32 $s0, $s0, $s0;
  cmp_sneu_f32_f32 $s0, $s0, $s0;
  cmp_ne_b1_f64 $c0, $d0, $d0;
  cmp_ne_b32_f64 $s0, $d0, $d0;
  cmp_ne_s32_f64 $s0, $d0, $d0;
  cmp_ne_u32_f64 $s0, $d0, $d0;
  cmp_ne_f32_f64 $s0, $d0, $d0;
  cmp_sne_b1_f64 $c0, $d0, $d0;
  cmp_sne_b32_f64 $s0, $d0, $d0;
  cmp_sne_s32_f64 $s0, $d0, $d0;
  cmp_sne_u32_f64 $s0, $d0, $d0;
  cmp_sne_f32_f64 $s0, $d0, $d0;
  cmp_neu_b1_f64 $c0, $d0, $d0;
  cmp_neu_b32_f64 $s0, $d0, $d0;
  cmp_neu_s32_f64 $s0, $d0, $d0;
  cmp_neu_u32_f64 $s0, $d0, $d0;
  cmp_neu_f32_f64 $s0, $d0, $d0;
  cmp_sneu_b1_f64 $c0, $d0, $d0;
  cmp_sneu_b32_f64 $s0, $d0, $d0;
  cmp_sneu_s32_f64 $s0, $d0, $d0;
  cmp_sneu_u32_f64 $s0, $d0, $d0;
  cmp_sneu_f32_f64 $s0, $d0, $d0;
  cmp_lt_b1_b32 $c0, $s0, $s0;
  cmp_lt_b32_b32 $s0, $s0, $s0;
  cmp_lt_s32_b32 $s0, $s0, $s0;
  cmp_lt_u32_b32 $s0, $s0, $s0;
  cmp_lt_f32_b32 $s0, $s0, $s0;
  cmp_lt_b1_b64 $c0, $d0, $d0;
  cmp_lt_b32_b64 $s0, $d0, $d0;
  cmp_lt_s32_b64 $s0, $d0, $d0;
  cmp_lt_u32_b64 $s0, $d0, $d0;
  cmp_lt_f32_b64 $s0, $d0, $d0;
  cmp_lt_b1_s32 $c0, $s0, $s0;
  cmp_lt_b32_s32 $s0, $s0, $s0;
  cmp_lt_s32_s32 $s0, $s0, $s0;
  cmp_lt_u32_s32 $s0, $s0, $s0;
  cmp_lt_f32_s32 $s0, $s0, $s0;
  cmp_lt_b1_s64 $c0, $d0, $d0;
  cmp_lt_b32_s64 $s0, $d0, $d0;
  cmp_lt_s32_s64 $s0, $d0, $d0;
  cmp_lt_u32_s64 $s0, $d0, $d0;
  cmp_lt_f32_s64 $s0, $d0, $d0;
  cmp_lt_b1_u32 $c0, $s0, $s0;
  cmp_lt_b32_u32 $s0, $s0, $s0;
  cmp_lt_s32_u32 $s0, $s0, $s0;
  cmp_lt_u32_u32 $s0, $s0, $s0;
  cmp_lt_f32_u32 $s0, $s0, $s0;
  cmp_lt_b1_u64 $c0, $d0, $d0;
  cmp_lt_b32_u64 $s0, $d0, $d0;
  cmp_lt_s32_u64 $s0, $d0, $d0;
  cmp_lt_u32_u64 $s0, $d0, $d0;
  cmp_lt_f32_u64 $s0, $d0, $d0;
  cmp_lt_b1_f32 $c0, $s0, $s0;
  cmp_lt_b32_f32 $s0, $s0, $s0;
  cmp_lt_s32_f32 $s0, $s0, $s0;
  cmp_lt_u32_f32 $s0, $s0, $s0;
  cmp_lt_f32_f32 $s0, $s0, $s0;
  cmp_slt_b1_f32 $c0, $s0, $s0;
  cmp_slt_b32_f32 $s0, $s0, $s0;
  cmp_slt_s32_f32 $s0, $s0, $s0;
  cmp_slt_u32_f32 $s0, $s0, $s0;
  cmp_slt_f32_f32 $s0, $s0, $s0;
  cmp_ltu_b1_f32 $c0, $s0, $s0;
  cmp_ltu_b32_f32 $s0, $s0, $s0;
  cmp_ltu_s32_f32 $s0, $s0, $s0;
  cmp_ltu_u32_f32 $s0, $s0, $s0;
  cmp_ltu_f32_f32 $s0, $s0, $s0;
  cmp_sltu_b1_f32 $c0, $s0, $s0;
  cmp_sltu_b32_f32 $s0, $s0, $s0;
  cmp_sltu_s32_f32 $s0, $s0, $s0;
  cmp_sltu_u32_f32 $s0, $s0, $s0;
  cmp_sltu_f32_f32 $s0, $s0, $s0;
  cmp_lt_b1_f64 $c0, $d0, $d0;
  cmp_lt_b32_f64 $s0, $d0, $d0;
  cmp_lt_s32_f64 $s0, $d0, $d0;
  cmp_lt_u32_f64 $s0, $d0, $d0;
  cmp_lt_f32_f64 $s0, $d0, $d0;
  cmp_slt_b1_f64 $c0, $d0, $d0;
  cmp_slt_b32_f64 $s0, $d0, $d0;
  cmp_slt_s32_f64 $s0, $d0, $d0;
  cmp_slt_u32_f64 $s0, $d0, $d0;
  cmp_slt_f32_f64 $s0, $d0, $d0;
  cmp_ltu_b1_f64 $c0, $d0, $d0;
  cmp_ltu_b32_f64 $s0, $d0, $d0;
  cmp_ltu_s32_f64 $s0, $d0, $d0;
  cmp_ltu_u32_f64 $s0, $d0, $d0;
  cmp_ltu_f32_f64 $s0, $d0, $d0;
  cmp_sltu_b1_f64 $c0, $d0, $d0;
  cmp_sltu_b32_f64 $s0, $d0, $d0;
  cmp_sltu_s32_f64 $s0, $d0, $d0;
  cmp_sltu_u32_f64 $s0, $d0, $d0;
  cmp_sltu_f32_f64 $s0, $d0, $d0;
  cmp_le_b1_b32 $c0, $s0, $s0;
  cmp_le_b32_b32 $s0, $s0, $s0;
  cmp_le_s32_b32 $s0, $s0, $s0;
  cmp_le_u32_b32 $s0, $s0, $s0;
  cmp_le_f32_b32 $s0, $s0, $s0;
  cmp_le_b1_b64 $c0, $d0, $d0;
  cmp_le_b32_b64 $s0, $d0, $d0;
  cmp_le_s32_b64 $s0, $d0, $d0;
  cmp_le_u32_b64 $s0, $d0, $d0;
  cmp_le_f32_b64 $s0, $d0, $d0;
  cmp_le_b1_s32 $c0, $s0, $s0;
  cmp_le_b32_s32 $s0, $s0, $s0;
  cmp_le_s32_s32 $s0, $s0, $s0;
  cmp_le_u32_s32 $s0, $s0, $s0;
  cmp_le_f32_s32 $s0, $s0, $s0;
  cmp_le_b1_s64 $c0, $d0, $d0;
  cmp_le_b32_s64 $s0, $d0, $d0;
  cmp_le_s32_s64 $s0, $d0, $d0;
  cmp_le_u32_s64 $s0, $d0, $d0;
  cmp_le_f32_s64 $s0, $d0, $d0;
  cmp_le_b1_u32 $c0, $s0, $s0;
  cmp_le_b32_u32 $s0, $s0, $s0;
  cmp_le_s32_u32 $s0, $s0, $s0;
  cmp_le_u32_u32 $s0, $s0, $s0;
  cmp_le_f32_u32 $s0, $s0, $s0;
  cmp_le_b1_u64 $c0, $d0, $d0;
  cmp_le_b32_u64 $s0, $d0, $d0;
  cmp_le_s32_u64 $s0, $d0, $d0;
  cmp_le_u32_u64 $s0, $d0, $d0;
  cmp_le_f32_u64 $s0, $d0, $d0;
  cmp_le_b1_f32 $c0, $s0, $s0;
  cmp_le_b32_f32 $s0, $s0, $s0;
  cmp_le_s32_f32 $s0, $s0, $s0;
  cmp_le_u32_f32 $s0, $s0, $s0;
  cmp_le_f32_f32 $s0, $s0, $s0;
  cmp_sle_b1_f32 $c0, $s0, $s0;
  cmp_sle_b32_f32 $s0, $s0, $s0;
  cmp_sle_s32_f32 $s0, $s0, $s0;
  cmp_sle_u32_f32 $s0, $s0, $s0;
  cmp_sle_f32_f32 $s0, $s0, $s0;
  cmp_leu_b1_f32 $c0, $s0, $s0;
  cmp_leu_b32_f32 $s0, $s0, $s0;
  cmp_leu_s32_f32 $s0, $s0, $s0;
  cmp_leu_u32_f32 $s0, $s0, $s0;
  cmp_leu_f32_f32 $s0, $s0, $s0;
  cmp_sleu_b1_f32 $c0, $s0, $s0;
  cmp_sleu_b32_f32 $s0, $s0, $s0;
  cmp_sleu_s32_f32 $s0, $s0, $s0;
  cmp_sleu_u32_f32 $s0, $s0, $s0;
  cmp_sleu_f32_f32 $s0, $s0, $s0;
  cmp_le_b1_f64 $c0, $d0, $d0;
  cmp_le_b32_f64 $s0, $d0, $d0;
  cmp_le_s32_f64 $s0, $d0, $d0;
  cmp_le_u32_f64 $s0, $d0, $d0;
  cmp_le_f32_f64 $s0, $d0, $d0;
  cmp_sle_b1_f64 $c0, $d0, $d0;
  cmp_sle_b32_f64 $s0, $d0, $d0;
  cmp_sle_s32_f64 $s0, $d0, $d0;
  cmp_sle_u32_f64 $s0, $d0, $d0;
  cmp_sle_f32_f64 $s0, $d0, $d0;
  cmp_leu_b1_f64 $c0, $d0, $d0;
  cmp_leu_b32_f64 $s0, $d0, $d0;
  cmp_leu_s32_f64 $s0, $d0, $d0;
  cmp_leu_u32_f64 $s0, $d0, $d0;
  cmp_leu_f32_f64 $s0, $d0, $d0;
  cmp_sleu_b1_f64 $c0, $d0, $d0;
  cmp_sleu_b32_f64 $s0, $d0, $d0;
  cmp_sleu_s32_f64 $s0, $d0, $d0;
  cmp_sleu_u32_f64 $s0, $d0, $d0;
  cmp_sleu_f32_f64 $s0, $d0, $d0;
  cmp_gt_b1_b32 $c0, $s0, $s0;
  cmp_gt_b32_b32 $s0, $s0, $s0;
  cmp_gt_s32_b32 $s0, $s0, $s0;
  cmp_gt_u32_b32 $s0, $s0, $s0;
  cmp_gt_f32_b32 $s0, $s0, $s0;
  cmp_gt_b1_b64 $c0, $d0, $d0;
  cmp_gt_b32_b64 $s0, $d0, $d0;
  cmp_gt_s32_b64 $s0, $d0, $d0;
  cmp_gt_u32_b64 $s0, $d0, $d0;
  cmp_gt_f32_b64 $s0, $d0, $d0;
  cmp_gt_b1_s32 $c0, $s0, $s0;
  cmp_gt_b32_s32 $s0, $s0, $s0;
  cmp_gt_s32_s32 $s0, $s0, $s0;
  cmp_gt_u32_s32 $s0, $s0, $s0;
  cmp_gt_f32_s32 $s0, $s0, $s0;
  cmp_gt_b1_s64 $c0, $d0, $d0;
  cmp_gt_b32_s64 $s0, $d0, $d0;
  cmp_gt_s32_s64 $s0, $d0, $d0;
  cmp_gt_u32_s64 $s0, $d0, $d0;
  cmp_gt_f32_s64 $s0, $d0, $d0;
  cmp_gt_b1_u32 $c0, $s0, $s0;
  cmp_gt_b32_u32 $s0, $s0, $s0;
  cmp_gt_s32_u32 $s0, $s0, $s0;
  cmp_gt_u32_u32 $s0, $s0, $s0;
  cmp_gt_f32_u32 $s0, $s0, $s0;
  cmp_gt_b1_u64 $c0, $d0, $d0;
  cmp_gt_b32_u64 $s0, $d0, $d0;
  cmp_gt_s32_u64 $s0, $d0, $d0;
  cmp_gt_u32_u64 $s0, $d0, $d0;
  cmp_gt_f32_u64 $s0, $d0, $d0;
  cmp_gt_b1_f32 $c0, $s0, $s0;
  cmp_gt_b32_f32 $s0, $s0, $s0;
  cmp_gt_s32_f32 $s0, $s0, $s0;
  cmp_gt_u32_f32 $s0, $s0, $s0;
  cmp_gt_f32_f32 $s0, $s0, $s0;
  cmp_sgt_b1_f32 $c0, $s0, $s0;
  cmp_sgt_b32_f32 $s0, $s0, $s0;
  cmp_sgt_s32_f32 $s0, $s0, $s0;
  cmp_sgt_u32_f32 $s0, $s0, $s0;
  cmp_sgt_f32_f32 $s0, $s0, $s0;
  cmp_gtu_b1_f32 $c0, $s0, $s0;
  cmp_gtu_b32_f32 $s0, $s0, $s0;
  cmp_gtu_s32_f32 $s0, $s0, $s0;
  cmp_gtu_u32_f32 $s0, $s0, $s0;
  cmp_gtu_f32_f32 $s0, $s0, $s0;
  cmp_sgtu_b1_f32 $c0, $s0, $s0;
  cmp_sgtu_b32_f32 $s0, $s0, $s0;
  cmp_sgtu_s32_f32 $s0, $s0, $s0;
  cmp_sgtu_u32_f32 $s0, $s0, $s0;
  cmp_sgtu_f32_f32 $s0, $s0, $s0;
  cmp_gt_b1_f64 $c0, $d0, $d0;
  cmp_gt_b32_f64 $s0, $d0, $d0;
  cmp_gt_s32_f64 $s0, $d0, $d0;
  cmp_gt_u32_f64 $s0, $d0, $d0;
  cmp_gt_f32_f64 $s0, $d0, $d0;
  cmp_sgt_b1_f64 $c0, $d0, $d0;
  cmp_sgt_b32_f64 $s0, $d0, $d0;
  cmp_sgt_s32_f64 $s0, $d0, $d0;
  cmp_sgt_u32_f64 $s0, $d0, $d0;
  cmp_sgt_f32_f64 $s0, $d0, $d0;
  cmp_gtu_b1_f64 $c0, $d0, $d0;
  cmp_gtu_b32_f64 $s0, $d0, $d0;
  cmp_gtu_s32_f64 $s0, $d0, $d0;
  cmp_gtu_u32_f64 $s0, $d0, $d0;
  cmp_gtu_f32_f64 $s0, $d0, $d0;
  cmp_sgtu_b1_f64 $c0, $d0, $d0;
  cmp_sgtu_b32_f64 $s0, $d0, $d0;
  cmp_sgtu_s32_f64 $s0, $d0, $d0;
  cmp_sgtu_u32_f64 $s0, $d0, $d0;
  cmp_sgtu_f32_f64 $s0, $d0, $d0;
  cmp_ge_b1_b32 $c0, $s0, $s0;
  cmp_ge_b32_b32 $s0, $s0, $s0;
  cmp_ge_s32_b32 $s0, $s0, $s0;
  cmp_ge_u32_b32 $s0, $s0, $s0;
  cmp_ge_f32_b32 $s0, $s0, $s0;
  cmp_ge_b1_b64 $c0, $d0, $d0;
  cmp_ge_b32_b64 $s0, $d0, $d0;
  cmp_ge_s32_b64 $s0, $d0, $d0;
  cmp_ge_u32_b64 $s0, $d0, $d0;
  cmp_ge_f32_b64 $s0, $d0, $d0;
  cmp_ge_b1_s32 $c0, $s0, $s0;
  cmp_ge_b32_s32 $s0, $s0, $s0;
  cmp_ge_s32_s32 $s0, $s0, $s0;
  cmp_ge_u32_s32 $s0, $s0, $s0;
  cmp_ge_f32_s32 $s0, $s0, $s0;
  cmp_ge_b1_s64 $c0, $d0, $d0;
  cmp_ge_b32_s64 $s0, $d0, $d0;
  cmp_ge_s32_s64 $s0, $d0, $d0;
  cmp_ge_u32_s64 $s0, $d0, $d0;
  cmp_ge_f32_s64 $s0, $d0, $d0;
  cmp_ge_b1_u32 $c0, $s0, $s0;
  cmp_ge_b32_u32 $s0, $s0, $s0;
  cmp_ge_s32_u32 $s0, $s0, $s0;
  cmp_ge_u32_u32 $s0, $s0, $s0;
  cmp_ge_f32_u32 $s0, $s0, $s0;
  cmp_ge_b1_u64 $c0, $d0, $d0;
  cmp_ge_b32_u64 $s0, $d0, $d0;
  cmp_ge_s32_u64 $s0, $d0, $d0;
  cmp_ge_u32_u64 $s0, $d0, $d0;
  cmp_ge_f32_u64 $s0, $d0, $d0;
  cmp_ge_b1_f32 $c0, $s0, $s0;
  cmp_ge_b32_f32 $s0, $s0, $s0;
  cmp_ge_s32_f32 $s0, $s0, $s0;
  cmp_ge_u32_f32 $s0, $s0, $s0;
  cmp_ge_f32_f32 $s0, $s0, $s0;
  cmp_sge_b1_f32 $c0, $s0, $s0;
  cmp_sge_b32_f32 $s0, $s0, $s0;
  cmp_sge_s32_f32 $s0, $s0, $s0;
  cmp_sge_u32_f32 $s0, $s0, $s0;
  cmp_sge_f32_f32 $s0, $s0, $s0;
  cmp_geu_b1_f32 $c0, $s0, $s0;
  cmp_geu_b32_f32 $s0, $s0, $s0;
  cmp_geu_s32_f32 $s0, $s0, $s0;
  cmp_geu_u32_f32 $s0, $s0, $s0;
  cmp_geu_f32_f32 $s0, $s0, $s0;
  cmp_sgeu_b1_f32 $c0, $s0, $s0;
  cmp_sgeu_b32_f32 $s0, $s0, $s0;
  cmp_sgeu_s32_f32 $s0, $s0, $s0;
  cmp_sgeu_u32_f32 $s0, $s0, $s0;
  cmp_sgeu_f32_f32 $s0, $s0, $s0;
  cmp_ge_b1_f64 $c0, $d0, $d0;
  cmp_ge_b32_f64 $s0, $d0, $d0;
  cmp_ge_s32_f64 $s0, $d0, $d0;
  cmp_ge_u32_f64 $s0, $d0, $d0;
  cmp_ge_f32_f64 $s0, $d0, $d0;
  cmp_sge_b1_f64 $c0, $d0, $d0;
  cmp_sge_b32_f64 $s0, $d0, $d0;
  cmp_sge_s32_f64 $s0, $d0, $d0;
  cmp_sge_u32_f64 $s0, $d0, $d0;
  cmp_sge_f32_f64 $s0, $d0, $d0;
  cmp_geu_b1_f64 $c0, $d0, $d0;
  cmp_geu_b32_f64 $s0, $d0, $d0;
  cmp_geu_s32_f64 $s0, $d0, $d0;
  cmp_geu_u32_f64 $s0, $d0, $d0;
  cmp_geu_f32_f64 $s0, $d0, $d0;
  cmp_sgeu_b1_f64 $c0, $d0, $d0;
  cmp_sgeu_b32_f64 $s0, $d0, $d0;
  cmp_sgeu_s32_f64 $s0, $d0, $d0;
  cmp_sgeu_u32_f64 $s0, $d0, $d0;
  cmp_sgeu_f32_f64 $s0, $d0, $d0;
  cmp_eq_b1_b1 $c0, $c0, $c0;
  cmp_eq_b32_b1 $s0, $c0, $c0;
  cmp_eq_s32_b1 $s0, $c0, $c0;
  cmp_eq_u32_b1 $s0, $c0, $c0;
  cmp_eq_f32_b1 $s0, $c0, $c0;
  cmp_ne_b1_b1 $c0, $c0, $c0;
  cmp_ne_b32_b1 $s0, $c0, $c0;
  cmp_ne_s32_b1 $s0, $c0, $c0;
  cmp_ne_u32_b1 $s0, $c0, $c0;
  cmp_ne_f32_b1 $s0, $c0, $c0;
  cmp_num_b1_f32 $c0, $s0, $s0;
  cmp_num_b32_f32 $s0, $s0, $s0;
  cmp_num_s32_f32 $s0, $s0, $s0;
  cmp_num_u32_f32 $s0, $s0, $s0;
  cmp_num_f32_f32 $s0, $s0, $s0;
  cmp_num_b1_f64 $c0, $d0, $d0;
  cmp_num_b32_f64 $s0, $d0, $d0;
  cmp_num_s32_f64 $s0, $d0, $d0;
  cmp_num_u32_f64 $s0, $d0, $d0;
  cmp_num_f32_f64 $s0, $d0, $d0;
  cmp_snum_b1_f32 $c0, $s0, $s0;
  cmp_snum_b32_f32 $s0, $s0, $s0;
  cmp_snum_s32_f32 $s0, $s0, $s0;
  cmp_snum_u32_f32 $s0, $s0, $s0;
  cmp_snum_f32_f32 $s0, $s0, $s0;
  cmp_snum_b1_f64 $c0, $d0, $d0;
  cmp_snum_b32_f64 $s0, $d0, $d0;
  cmp_snum_s32_f64 $s0, $d0, $d0;
  cmp_snum_u32_f64 $s0, $d0, $d0;
  cmp_snum_f32_f64 $s0, $d0, $d0;
  cmp_nan_b1_f32 $c0, $s0, $s0;
  cmp_nan_b32_f32 $s0, $s0, $s0;
  cmp_nan_s32_f32 $s0, $s0, $s0;
  cmp_nan_u32_f32 $s0, $s0, $s0;
  cmp_nan_f32_f32 $s0, $s0, $s0;
  cmp_nan_b1_f64 $c0, $d0, $d0;
  cmp_nan_b32_f64 $s0, $d0, $d0;
  cmp_nan_s32_f64 $s0, $d0, $d0;
  cmp_nan_u32_f64 $s0, $d0, $d0;
  cmp_nan_f32_f64 $s0, $d0, $d0;
  cmp_snan_b1_f32 $c0, $s0, $s0;
  cmp_snan_b32_f32 $s0, $s0, $s0;
  cmp_snan_s32_f32 $s0, $s0, $s0;
  cmp_snan_u32_f32 $s0, $s0, $s0;
  cmp_snan_f32_f32 $s0, $s0, $s0;
  cmp_snan_b1_f64 $c0, $d0, $d0;
  cmp_snan_b32_f64 $s0, $d0, $d0;
  cmp_snan_s32_f64 $s0, $d0, $d0;
  cmp_snan_u32_f64 $s0, $d0, $d0;
  cmp_snan_f32_f64 $s0, $d0, $d0;
  cvt_u8_b1 $s0, $c0;
  cvt_s8_b1 $s0, $c0;
  cvt_u16_b1 $s0, $c0;
  cvt_s16_b1 $s0, $c0;
  cvt_u32_b1 $s0, $c0;
  cvt_s32_b1 $s0, $c0;
  cvt_u64_b1 $d0, $c0;
  cvt_s64_b1 $d0, $c0;
  cvt_u8_u8 $s0, $s0;
  cvt_s8_u8 $s0, $s0;
  cvt_u16_u8 $s0, $s0;
  cvt_s16_u8 $s0, $s0;
  cvt_u32_u8 $s0, $s0;
  cvt_s32_u8 $s0, $s0;
  cvt_u64_u8 $d0, $s0;
  cvt_s64_u8 $d0, $s0;
  cvt_u8_s8 $s0, $s0;
  cvt_s8_s8 $s0, $s0;
  cvt_u16_s8 $s0, $s0;
  cvt_s16_s8 $s0, $s0;
  cvt_u32_s8 $s0, $s0;
  cvt_s32_s8 $s0, $s0;
  cvt_u64_s8 $d0, $s0;
  cvt_s64_s8 $d0, $s0;
  cvt_u8_u16 $s0, $s0;
  cvt_s8_u16 $s0, $s0;
  cvt_u16_u16 $s0, $s0;
  cvt_s16_u16 $s0, $s0;
  cvt_u32_u16 $s0, $s0;
  cvt_s32_u16 $s0, $s0;
  cvt_u64_u16 $d0, $s0;
  cvt_s64_u16 $d0, $s0;
  cvt_u8_s16 $s0, $s0;
  cvt_s8_s16 $s0, $s0;
  cvt_u16_s16 $s0, $s0;
  cvt_s16_s16 $s0, $s0;
  cvt_u32_s16 $s0, $s0;
  cvt_s32_s16 $s0, $s0;
  cvt_u64_s16 $d0, $s0;
  cvt_s64_s16 $d0, $s0;
  cvt_u8_u32 $s0, $s0;
  cvt_s8_u32 $s0, $s0;
  cvt_u16_u32 $s0, $s0;
  cvt_s16_u32 $s0, $s0;
  cvt_u32_u32 $s0, $s0;
  cvt_s32_u32 $s0, $s0;
  cvt_u64_u32 $d0, $s0;
  cvt_s64_u32 $d0, $s0;
  cvt_u8_s32 $s0, $s0;
  cvt_s8_s32 $s0, $s0;
  cvt_u16_s32 $s0, $s0;
  cvt_s16_s32 $s0, $s0;
  cvt_u32_s32 $s0, $s0;
  cvt_s32_s32 $s0, $s0;
  cvt_u64_s32 $d0, $s0;
  cvt_s64_s32 $d0, $s0;
  cvt_u8_u64 $s0, $d0;
  cvt_s8_u64 $s0, $d0;
  cvt_u16_u64 $s0, $d0;
  cvt_s16_u64 $s0, $d0;
  cvt_u32_u64 $s0, $d0;
  cvt_s32_u64 $s0, $d0;
  cvt_u64_u64 $d0, $d0;
  cvt_s64_u64 $d0, $d0;
  cvt_u8_s64 $s0, $d0;
  cvt_s8_s64 $s0, $d0;
  cvt_u16_s64 $s0, $d0;
  cvt_s16_s64 $s0, $d0;
  cvt_u32_s64 $s0, $d0;
  cvt_s32_s64 $s0, $d0;
  cvt_u64_s64 $d0, $d0;
  cvt_s64_s64 $d0, $d0;
  cvt_u8_f32 $s0, $s0;
  cvt_s8_f32 $s0, $s0;
  cvt_u16_f32 $s0, $s0;
  cvt_s16_f32 $s0, $s0;
  cvt_u32_f32 $s0, $s0;
  cvt_s32_f32 $s0, $s0;
  cvt_u64_f32 $d0, $s0;
  cvt_s64_f32 $d0, $s0;
  cvt_u8_f64 $s0, $d0;
  cvt_s8_f64 $s0, $d0;
  cvt_u16_f64 $s0, $d0;
  cvt_s16_f64 $s0, $d0;
  cvt_u32_f64 $s0, $d0;
  cvt_s32_f64 $s0, $d0;
  cvt_u64_f64 $d0, $d0;
  cvt_s64_f64 $d0, $d0;
  cvt_upi_u8_f32 $s0, $s0;
  cvt_upi_s8_f32 $s0, $s0;
  cvt_upi_u16_f32 $s0, $s0;
  cvt_upi_s16_f32 $s0, $s0;
  cvt_upi_u32_f32 $s0, $s0;
  cvt_upi_s32_f32 $s0, $s0;
  cvt_upi_u64_f32 $d0, $s0;
  cvt_upi_s64_f32 $d0, $s0;
  cvt_upi_u8_f64 $s0, $d0;
  cvt_upi_s8_f64 $s0, $d0;
  cvt_upi_u16_f64 $s0, $d0;
  cvt_upi_s16_f64 $s0, $d0;
  cvt_upi_u32_f64 $s0, $d0;
  cvt_upi_s32_f64 $s0, $d0;
  cvt_upi_u64_f64 $d0, $d0;
  cvt_upi_s64_f64 $d0, $d0;
  cvt_downi_u8_f32 $s0, $s0;
  cvt_downi_s8_f32 $s0, $s0;
  cvt_downi_u16_f32 $s0, $s0;
  cvt_downi_s16_f32 $s0, $s0;
  cvt_downi_u32_f32 $s0, $s0;
  cvt_downi_s32_f32 $s0, $s0;
  cvt_downi_u64_f32 $d0, $s0;
  cvt_downi_s64_f32 $d0, $s0;
  cvt_downi_u8_f64 $s0, $d0;
  cvt_downi_s8_f64 $s0, $d0;
  cvt_downi_u16_f64 $s0, $d0;
  cvt_downi_s16_f64 $s0, $d0;
  cvt_downi_u32_f64 $s0, $d0;
  cvt_downi_s32_f64 $s0, $d0;
  cvt_downi_u64_f64 $d0, $d0;
  cvt_downi_s64_f64 $d0, $d0;
  cvt_zeroi_u8_f32 $s0, $s0;
  cvt_zeroi_s8_f32 $s0, $s0;
  cvt_zeroi_u16_f32 $s0, $s0;
  cvt_zeroi_s16_f32 $s0, $s0;
  cvt_zeroi_u32_f32 $s0, $s0;
  cvt_zeroi_s32_f32 $s0, $s0;
  cvt_zeroi_u64_f32 $d0, $s0;
  cvt_zeroi_s64_f32 $d0, $s0;
  cvt_zeroi_u8_f64 $s0, $d0;
  cvt_zeroi_s8_f64 $s0, $d0;
  cvt_zeroi_u16_f64 $s0, $d0;
  cvt_zeroi_s16_f64 $s0, $d0;
  cvt_zeroi_u32_f64 $s0, $d0;
  cvt_zeroi_s32_f64 $s0, $d0;
  cvt_zeroi_u64_f64 $d0, $d0;
  cvt_zeroi_s64_f64 $d0, $d0;
  cvt_neari_u8_f32 $s0, $s0;
  cvt_neari_s8_f32 $s0, $s0;
  cvt_neari_u16_f32 $s0, $s0;
  cvt_neari_s16_f32 $s0, $s0;
  cvt_neari_u32_f32 $s0, $s0;
  cvt_neari_s32_f32 $s0, $s0;
  cvt_neari_u64_f32 $d0, $s0;
  cvt_neari_s64_f32 $d0, $s0;
  cvt_neari_u8_f64 $s0, $d0;
  cvt_neari_s8_f64 $s0, $d0;
  cvt_neari_u16_f64 $s0, $d0;
  cvt_neari_s16_f64 $s0, $d0;
  cvt_neari_u32_f64 $s0, $d0;
  cvt_neari_s32_f64 $s0, $d0;
  cvt_neari_u64_f64 $d0, $d0;
  cvt_neari_s64_f64 $d0, $d0;
  cvt_f32_b1 $s0, $c0;
  cvt_f64_b1 $d0, $c0;
  cvt_f32_u8 $s0, $s0;
  cvt_f64_u8 $d0, $s0;
  cvt_f32_s8 $s0, $s0;
  cvt_f64_s8 $d0, $s0;
  cvt_f32_u16 $s0, $s0;
  cvt_f64_u16 $d0, $s0;
  cvt_f32_s16 $s0, $s0;
  cvt_f64_s16 $d0, $s0;
  cvt_f32_u32 $s0, $s0;
  cvt_f64_u32 $d0, $s0;
  cvt_f32_s32 $s0, $s0;
  cvt_f64_s32 $d0, $s0;
  cvt_f32_u64 $s0, $d0;
  cvt_f64_u64 $d0, $d0;
  cvt_f32_s64 $s0, $d0;
  cvt_f64_s64 $d0, $d0;
  cvt_up_f32_b1 $s0, $c0;
  cvt_up_f64_b1 $d0, $c0;
  cvt_up_f32_u8 $s0, $s0;
  cvt_up_f64_u8 $d0, $s0;
  cvt_up_f32_s8 $s0, $s0;
  cvt_up_f64_s8 $d0, $s0;
  cvt_up_f32_u16 $s0, $s0;
  cvt_up_f64_u16 $d0, $s0;
  cvt_up_f32_s16 $s0, $s0;
  cvt_up_f64_s16 $d0, $s0;
  cvt_up_f32_u32 $s0, $s0;
  cvt_up_f64_u32 $d0, $s0;
  cvt_up_f32_s32 $s0, $s0;
  cvt_up_f64_s32 $d0, $s0;
  cvt_up_f32_u64 $s0, $d0;
  cvt_up_f64_u64 $d0, $d0;
  cvt_up_f32_s64 $s0, $d0;
  cvt_up_f64_s64 $d0, $d0;
  cvt_down_f32_b1 $s0, $c0;
  cvt_down_f64_b1 $d0, $c0;
  cvt_down_f32_u8 $s0, $s0;
  cvt_down_f64_u8 $d0, $s0;
  cvt_down_f32_s8 $s0, $s0;
  cvt_down_f64_s8 $d0, $s0;
  cvt_down_f32_u16 $s0, $s0;
  cvt_down_f64_u16 $d0, $s0;
  cvt_down_f32_s16 $s0, $s0;
  cvt_down_f64_s16 $d0, $s0;
  cvt_down_f32_u32 $s0, $s0;
  cvt_down_f64_u32 $d0, $s0;
  cvt_down_f32_s32 $s0, $s0;
  cvt_down_f64_s32 $d0, $s0;
  cvt_down_f32_u64 $s0, $d0;
  cvt_down_f64_u64 $d0, $d0;
  cvt_down_f32_s64 $s0, $d0;
  cvt_down_f64_s64 $d0, $d0;
  cvt_zero_f32_b1 $s0, $c0;
  cvt_zero_f64_b1 $d0, $c0;
  cvt_zero_f32_u8 $s0, $s0;
  cvt_zero_f64_u8 $d0, $s0;
  cvt_zero_f32_s8 $s0, $s0;
  cvt_zero_f64_s8 $d0, $s0;
  cvt_zero_f32_u16 $s0, $s0;
  cvt_zero_f64_u16 $d0, $s0;
  cvt_zero_f32_s16 $s0, $s0;
  cvt_zero_f64_s16 $d0, $s0;
  cvt_zero_f32_u32 $s0, $s0;
  cvt_zero_f64_u32 $d0, $s0;
  cvt_zero_f32_s32 $s0, $s0;
  cvt_zero_f64_s32 $d0, $s0;
  cvt_zero_f32_u64 $s0, $d0;
  cvt_zero_f64_u64 $d0, $d0;
  cvt_zero_f32_s64 $s0, $d0;
  cvt_zero_f64_s64 $d0, $d0;
  cvt_near_f32_b1 $s0, $c0;
  cvt_near_f64_b1 $d0, $c0;
  cvt_near_f32_u8 $s0, $s0;
  cvt_near_f64_u8 $d0, $s0;
  cvt_near_f32_s8 $s0, $s0;
  cvt_near_f64_s8 $d0, $s0;
  cvt_near_f32_u16 $s0, $s0;
  cvt_near_f64_u16 $d0, $s0;
  cvt_near_f32_s16 $s0, $s0;
  cvt_near_f64_s16 $d0, $s0;
  cvt_near_f32_u32 $s0, $s0;
  cvt_near_f64_u32 $d0, $s0;
  cvt_near_f32_s32 $s0, $s0;
  cvt_near_f64_s32 $d0, $s0;
  cvt_near_f32_u64 $s0, $d0;
  cvt_near_f64_u64 $d0, $d0;
  cvt_near_f32_s64 $s0, $d0;
  cvt_near_f64_s64 $d0, $d0;
  cvt_b1_b1 $c0, $c0;
  cvt_b1_s8 $c0, $s0;
  cvt_b1_u8 $c0, $s0;
  cvt_b1_s16 $c0, $s0;
  cvt_b1_u16 $c0, $s0;
  cvt_b1_s32 $c0, $s0;
  cvt_b1_u32 $c0, $s0;
  cvt_b1_f32 $c0, $s0;
  cvt_b1_s64 $c0, $d0;
  cvt_b1_u64 $c0, $d0;
  cvt_b1_f64 $c0, $d0;
  cvt_f32_f32 $s0, $s0;
  cvt_f64_f64 $d0, $d0;
  cvt_upi_f32_f32 $s0, $s0;
  cvt_upi_f64_f64 $d0, $d0;
  cvt_downi_f32_f32 $s0, $s0;
  cvt_downi_f64_f64 $d0, $d0;
  cvt_zeroi_f32_f32 $s0, $s0;
  cvt_zeroi_f64_f64 $d0, $d0;
  cvt_neari_f32_f32 $s0, $s0;
  cvt_neari_f64_f64 $d0, $d0;
  cvt_up_f32_f64 $s0, $d0;
  cvt_down_f32_f64 $s0, $d0;
  cvt_zero_f32_f64 $s0, $d0;
  cvt_near_f32_f64 $s0, $d0;
  cvt_f64_f32 $d0, $s0;
  ld_u8 $s0, [$s0];
  ld_u16 $s0, [$s0];
  ld_u32 $s0, [$s0];
  ld_u64 $d0, [$s0];
  ld_s8 $s0, [$s0];
  ld_s16 $s0, [$s0];
  ld_s32 $s0, [$s0];
  ld_s64 $d0, [$s0];
  ld_f32 $s0, [$s0];
  ld_f64 $d0, [$s0];
  st_u8 $s0, [$s0];
  st_u16 $s0, [$s0];
  st_u32 $s0, [$s0];
  st_u64 $d0, [$s0];
  st_s8 $s0, [$s0];
  st_s16 $s0, [$s0];
  st_s32 $s0, [$s0];
  st_s64 $d0, [$s0];
  st_f32 $s0, [$s0];
  st_f64 $d0, [$s0];
  atomic_and_s32 $s0, [$s0], $s0;
  atomicNoRet_and_s32 [$s0], $s0;
  atomic_and_s64 $d0, [$s0], $d0;
  atomicNoRet_and_s64 [$s0], $d0;
  atomic_and_u32 $s0, [$s0], $s0;
  atomicNoRet_and_u32 [$s0], $s0;
  atomic_and_u64 $d0, [$s0], $d0;
  atomicNoRet_and_u64 [$s0], $d0;
  atomic_or_s32 $s0, [$s0], $s0;
  atomicNoRet_or_s32 [$s0], $s0;
  atomic_or_s64 $d0, [$s0], $d0;
  atomicNoRet_or_s64 [$s0], $d0;
  atomic_or_u32 $s0, [$s0], $s0;
  atomicNoRet_or_u32 [$s0], $s0;
  atomic_or_u64 $d0, [$s0], $d0;
  atomicNoRet_or_u64 [$s0], $d0;
  atomic_xor_s32 $s0, [$s0], $s0;
  atomicNoRet_xor_s32 [$s0], $s0;
  atomic_xor_s64 $d0, [$s0], $d0;
  atomicNoRet_xor_s64 [$s0], $d0;
  atomic_xor_u32 $s0, [$s0], $s0;
  atomicNoRet_xor_u32 [$s0], $s0;
  atomic_xor_u64 $d0, [$s0], $d0;
  atomicNoRet_xor_u64 [$s0], $d0;
  atomic_cas_s32 $s0, [$s0], $s0, $s0;
  atomicNoRet_cas_s32 [$s0], $s0, $s0;
  atomic_cas_s64 $d0, [$s0], $d0, $d0;
  atomicNoRet_cas_s64 [$s0], $d0, $d0;
  atomic_cas_u32 $s0, [$s0], $s0, $s0;
  atomicNoRet_cas_u32 [$s0], $s0, $s0;
  atomic_cas_u64 $d0, [$s0], $d0, $d0;
  atomicNoRet_cas_u64 [$s0], $d0, $d0;
  atomic_exch_s32 $s0, [$s0], $s0;
  atomic_exch_s64 $d0, [$s0], $d0;
  atomic_exch_u32 $s0, [$s0], $s0;
  atomic_exch_u64 $d0, [$s0], $d0;
  atomic_add_s32 $s0, [$s0], $s0;
  atomicNoRet_add_s32 [$s0], $s0;
  atomic_add_s64 $d0, [$s0], $d0;
  atomicNoRet_add_s64 [$s0], $d0;
  atomic_add_u32 $s0, [$s0], $s0;
  atomicNoRet_add_u32 [$s0], $s0;
  atomic_add_u64 $d0, [$s0], $d0;
  atomicNoRet_add_u64 [$s0], $d0;
  atomic_sub_s32 $s0, [$s0], $s0;
  atomicNoRet_sub_s32 [$s0], $s0;
  atomic_sub_s64 $d0, [$s0], $d0;
  atomicNoRet_sub_s64 [$s0], $d0;
  atomic_sub_u32 $s0, [$s0], $s0;
  atomicNoRet_sub_u32 [$s0], $s0;
  atomic_sub_u64 $d0, [$s0], $d0;
  atomicNoRet_sub_u64 [$s0], $d0;
  atomic_and_b32 $s0, [$s0], $s0;
  atomicNoRet_and_b32 [$s0], $s0;
  atomic_and_b64 $d0, [$s0], $d0;
  atomicNoRet_and_b64 [$s0], $d0;
  atomic_or_b32 $s0, [$s0], $s0;
  atomicNoRet_or_b32 [$s0], $s0;
  atomic_or_b64 $d0, [$s0], $d0;
  atomicNoRet_or_b64 [$s0], $d0;
  atomic_xor_b32 $s0, [$s0], $s0;
  atomicNoRet_xor_b32 [$s0], $s0;
  atomic_xor_b64 $d0, [$s0], $d0;
  atomicNoRet_xor_b64 [$s0], $d0;
  atomic_cas_b32 $s0, [$s0], $s0, $s0;
  atomicNoRet_cas_b32 [$s0], $s0, $s0;
  atomic_cas_b64 $d0, [$s0], $d0, $d0;
  atomicNoRet_cas_b64 [$s0], $d0, $d0;
  atomic_exch_b32 $s0, [$s0], $s0;
  atomic_exch_b64 $d0, [$s0], $d0;
  atomic_add_b32 $s0, [$s0], $s0;
  atomicNoRet_add_b32 [$s0], $s0;
  atomic_add_b64 $d0, [$s0], $d0;
  atomicNoRet_add_b64 [$s0], $d0;
  atomic_sub_b32 $s0, [$s0], $s0;
  atomicNoRet_sub_b32 [$s0], $s0;
  atomic_sub_b64 $d0, [$s0], $d0;
  atomicNoRet_sub_b64 [$s0], $d0;
  workitemabsid $s0, 0;

//instruction2
  abs_s32 $s1, $s2;
  abs_s32 $s1, WAVESIZE;
  abs_s64 $d1, $d2;
  abs_s64 $d1, 4;
  abs_s64 $d1, WAVESIZE;
  abs_s32 $s1, -4;
  abs_p_s8x4 $s1, $s2;
  abs_p_s16x2 $s1, $s2;
  abs_s_s8x4 $s1, $s2;
  abs_s_s16x2 $s1, $s2;
  abs_p_s8x8 $d1, $d2;
  abs_p_s16x4 $d1, $d2;
  abs_p_s32x2 $d1, $d2;
  abs_s_s8x8 $d1, $d2;
  abs_s_s16x4 $d1, $d2;
  abs_s_s32x2 $d1, $d2;
  neg_s32 $s1, $s2;
  neg_s32 $s1, +4;
  neg_s32 $s1, WAVESIZE;
  neg_s64 $d1, $d2;
  neg_s64 $d1, 4;
  neg_s64 $d1, WAVESIZE;
  neg_p_s8x4 $s1, $s2;
  neg_p_s16x2 $s1, $s2;
  neg_s_s8x4 $s1, $s2;
  neg_s_s16x2 $s1, $s2;
  neg_p_s8x8 $d1, $d2;
  neg_p_s16x4 $d1, $d2;
  neg_p_s32x2 $d1, $d2;
  neg_s_s8x8 $d1, $d2;
  neg_s_s16x4 $d1, $d2;
  neg_s_s32x2 $d1, $d2;
  not_b1 $c1, $c2;
  not_b32 $s0, $s2;
  not_b64 $d0, $d1;
  not_b1 $c1, 0;
  not_b32 $s0, 0x11;
  not_b64 $d0, 0x11;
  not_b1 $c1, WAVESIZE;
  not_b32 $s0, WAVESIZE;
  not_b64 $d0, WAVESIZE;
  popcount_b32 $s1, $s2;
  popcount_b64 $s1, $d2;
  popcount_b32 $s1, 0x00010001;
  popcount_b64 $s1, 0x00010001;
  popcount_b32 $s1, WAVESIZE;
  popcount_b64 $s1, WAVESIZE;
  firstbit_b32 $s1, 0x01;
  firstbit_b32 $s1, WAVESIZE;
  firstbit_b32 $s1, $s2;
  //firstbit_b64 $s1, $d2;
  lastbit_b32 $s1, $s2;
  lastbit_b32 $s1, 0x01;
  lastbit_b32 $s1, WAVESIZE;
  //lastbit_b64 $s1, $d2;
  bitrev_b32 $s1, $s2;
  bitrev_b64 $d1, $d2;
  bitrev_b32 $s1, 0x01;
  bitrev_b64 $d1, 0x01;
  bitrev_b32 $s1, WAVESIZE;
  bitrev_b64 $d1, WAVESIZE;
  movs_lo_b32 $s1, $d1;
  //movs_lo_b32 $s1, 0x000100010001;
  movs_hi_b32 $s1, $d1;
  //movs_hi_b32 $s1, 0x000100010001;
  sqrt_f32 $s1, $s2;
  sqrt_f64 $d1, $d2;
  sqrt_f32 $s1, 1.0f;
  sqrt_f64 $d1, 1.0;
  sqrt_ftz_f32 $s1, $s2;
  sqrt_up_f32 $s1, $s2;
  sqrt_down_f32 $s1, $s2;
  sqrt_zero_f32 $s1, $s2;
  sqrt_ftz_up_f32 $s1, $s2;
  sqrt_ftz_down_f32 $s1, $s2;
  sqrt_ftz_zero_f32 $s1, $s2;
  sqrt_ftz_f64 $d1, $d2;
  sqrt_up_f64 $d1, $d2;
  sqrt_down_f64 $d1, $d2;
  sqrt_zero_f64 $d1, $d2;
  sqrt_ftz_up_f64 $d1, $d2;
  sqrt_ftz_down_f64 $d1, $d2;
  sqrt_ftz_zero_f64 $d1, $d2;
  sqrt_ftz_f32 $s1, 1.0f;
  sqrt_up_f32 $s1, 1.0f;
  sqrt_down_f32 $s1, 1.0f;
  sqrt_zero_f32 $s1, 1.0f;
  sqrt_ftz_up_f32 $s1, 1.0f;
  sqrt_ftz_zero_f32 $s1, 1.0f;
  sqrt_ftz_f64 $d1,1.0;
  sqrt_up_f64 $d1,1.0;
  sqrt_down_f64 $d1, 1.0;
  sqrt_zero_f64 $d1, 1.0;
  sqrt_ftz_up_f64 $d1, 1.0;
  sqrt_ftz_down_f64 $d1, 1.0;
  sqrt_ftz_zero_f64 $d1, 1.0;
  fsin_f32 $s0, $s1;
  fsin_f32 $s0, 0.3f;
  fsin_ftz_f32 $s0, $s1;
  fsin_ftz_f32 $s0, 0.3f;
  fcos_f32 $s0, $s1;
  fcos_f32 $s0, 0.3f;
  fcos_ftz_f32 $s0, $s1;
  fcos_ftz_f32 $s0, 0.3f;
  fexp2_f32 $s0, $s1;
  fexp2_f32 $s0, 0.3f;
  fexp2_ftz_f32 $s0, $s1;
  fexp2_ftz_f32 $s0, 0.3f;
  flog2_f32 $s0, $s1;
  flog2_f32 $s0, 0.3f;
  flog2_ftz_f32 $s0, $s1;
  flog2_ftz_f32 $s0, 0.3f;
  frcp_f32 $s1,$s2;
  frcp_f64 $d1,$d2;
  frcp_f32 $s1,4.0f;
  frcp_f64 $d1,4.0;
  frcp_ftz_f32 $s1,$s2;
  frcp_ftz_f64 $d1,$d2;
  frcp_ftz_f32 $s1,4.0f;
  frcp_ftz_f64 $d1,4.0;
  fract_f32 $s1, $s2;
  fract_f64 $d1, $d2;
  fract_f64 $d1, 3.2;
  fract_ftz_f32 $s1, $s2;
  fract_ftz_f64 $d1, $d2;
  fract_ftz_f32 $s1, 3.2f;
  fract_ftz_f64 $d1, 3.2;
  frsqrt_f32 $s1, $s2;
  frsqrt_f64 $d1, $d2;
  frsqrt_f32 $s1, 4.0f;
  frsqrt_f64 $d1, 4.0;
  frsqrt_ftz_f32 $s1, $s2;
  frsqrt_ftz_f64 $d1, $d2;
  frsqrt_ftz_f32 $s1, 4.0f;
  frsqrt_ftz_f64 $d1, 4.0;
  alloca $s1, 24;
  alloca $s1, $s2;

//instruction3
  add_u32 $s1, $s2, $s3;
  add_u32 $s1, $s2, 0x4356789;
  add_u32 $s1, $s2, WAVESIZE;
  add_s32 $s1, $s2, $s3;
  add_s32 $s1, $s2, 0x4356789;
  add_s32 $s1, $s2, WAVESIZE;
  add_u64 $d1, $d2, $d3;
  add_u64 $d1, $d2, 0x4356789;
  add_u64 $d1, $d2, WAVESIZE;
  add_s64 $d1, $d2, $d3;
  add_s64 $d1, $d2, 0x4356789;
  add_s64 $d1, $d2, WAVESIZE;
  add_u32 $s1, 0x100011, $s3;
  add_u32 $s1, 0x100011, 0x4356789;
  add_u32 $s1, 0x100011, WAVESIZE;
  add_s32 $s1, 0x100011, $s3;
  add_s32 $s1, 0x100011, 0x4356789;
  add_s32 $s1, 0x100011, WAVESIZE;
  add_u64 $d1, 0x1703a, $d3;
  add_u64 $d1, 0x1703a, 0x4356789;
  add_u64 $d1, 0x1703a, WAVESIZE;
  add_s64 $d1, 0x1703a, $d3;
  add_s64 $d1, 0x1703a, 0x4356789;
  add_s64 $d1, 0x1703a, WAVESIZE;
  add_u32 $s1, WAVESIZE, $s3;
  add_u32 $s1, WAVESIZE, 0x4356789;
  add_u32 $s1, WAVESIZE, WAVESIZE;
  add_s32 $s1, WAVESIZE, $s3;
  add_s32 $s1, WAVESIZE, 0x4356789;
  add_s32 $s1, WAVESIZE, WAVESIZE;
  add_u64 $d1, WAVESIZE, $d3;
  add_u64 $d1, WAVESIZE, 0x4356789;
  add_u64 $d1, WAVESIZE, WAVESIZE;
  add_s64 $d1, WAVESIZE, $d3;
  add_s64 $d1, WAVESIZE, 0x4356789;
  add_s64 $d1, WAVESIZE, WAVESIZE;
  add_f32 $s1, $s2, $s3;
  add_f64 $d1, $d2, 0.5;
  add_f32 $s1, 72.0f, $s3;
  add_f64 $d1, 72.0, $d3;
  add_pp_u8x4 $s1, $s2, $s3;
  add_pp_sat_s8x4 $s1, $s2, $s3;
  add_ps_u16x2 $s1, $s2, $s3;
  add_ps_sat_s16x2 $s1, $s2, $s3;
  add_sp_u8x8 $d1, $d2, $d3;
  add_sp_sat_s8x8 $d1, $d2, $d3;
  add_ss_u16x4 $d1, $d2, $d3;
  add_ss_sat_s16x4 $d1, $d2, $d3;
  add_ss_u32x2 $d1, $d2, $d3;
  add_ss_sat_s32x2 $d1, $d2, $d3;
  add_pp_f16x2 $s1, $s2, $s3;
  add_ps_f16x4 $d1, $d2, $d3;
  add_sp_f32x2 $d1, $d2, $d3;
  add_ss_f32x2 $d1, $d2, $d3;
  carry_u32 $s1, $s2, $s3;
  carry_s32 $s1, $s2, 0x3456a;
  carry_u64 $d1, $d2, $d3;
  carry_s64 $d1, $d2, 0x3456a;
  carry_u32 $s1, 0x100011, WAVESIZE;
  carry_s32 $s1, 0x100011, $s3;
  carry_u64 $d1, 0x1703a, 0x3456a;
  carry_s64 $d1, WAVESIZE, $d3;
  borrow_u32 $s1, $s2, $s3;
  borrow_s32 $s1, $s2, 0x3456a;
  borrow_u64 $d1, $d2, $d3;
  borrow_s64 $d1, $d2, 0x3456a;
  borrow_u32 $s1, 0x100011, WAVESIZE;
  borrow_s32 $s1, 0x100011, $s3;
  borrow_u64 $d1, 0x1703a, 0x3456a;
  borrow_s64 $d1, WAVESIZE, $d3;
  div_u32 $s1, $s2, $s3;
  div_s32 $s1, $s2, 0x3456a;
  div_u64 $d1, $d2, $d3;
  div_s64 $d1, $d2, 0x3456a;
  div_u32 $s1, 0x100011, WAVESIZE;
  div_s32 $s1, 0x100011, $s3;
  div_u64 $d1, 0x1703a, 0x3456a;
  div_s64 $d1, WAVESIZE, $d3;
  div_f32 $s1, 72.0f, $s3;
  rem_u32 $s1, $s2, $s3;
  rem_s32 $s1, $s2, 0x3456a;
  rem_u64 $d1, $d2, $d3;
  rem_s64 $d1, $d2, 0x3456a;
  rem_u32 $s1, 0x100011, WAVESIZE;
  rem_s32 $s1, 0x100011, $s3;
  rem_u64 $d1, 0x1703a, 0x3456a;
  rem_s64 $d1, WAVESIZE, $d3;
  sub_u32 $s1, $s2, $s3;
  sub_s32 $s1, $s2, 0x3456a;
  sub_u64 $d1, $d2, $d3;
  sub_s64 $d1, $d2, 0x3456a;
  sub_u32 $s1, 0x100011, WAVESIZE;
  sub_s32 $s1, 0x100011, $s3;
  sub_u64 $d1, 0x1703a, 0x3456a;
  sub_s64 $d1, WAVESIZE, $d3;
  sub_f32 $s1, $s2, $s3;
  sub_f64 $d1, $d2, 1.5;
  sub_f32 $s1, 72.0f, $s3;
  sub_pp_u8x4 $s1, $s2, $s3;
  sub_pp_sat_s8x4 $s1, $s2, $s3;
  sub_ps_u16x2 $s1, $s2, $s3;
  sub_ps_sat_s16x2 $s1, $s2, $s3;
  sub_sp_u8x8 $d1, $d2, $d3;
  sub_sp_sat_s8x8 $d1, $d2, $d3;
  sub_ss_u16x4 $d1, $d2, $d3;
  sub_ss_sat_s16x4 $d1, $d2, $d3;
  sub_ss_u32x2 $d1, $d2, $d3;
  sub_ss_sat_s32x2 $d1, $d2, $d3;
  sub_pp_f16x2 $s1, $s2, $s3;
  sub_ps_f16x4 $d1, $d2, $d3;
  sub_sp_f32x2 $d1, $d2, $d3;
  sub_ss_f32x2 $d1, $d2, $d3;
  shl_u32 $s1, $s2, $s3;
  shl_s32 $s1, $s2, 0x3456a;
  shl_u64 $d1, $d2, $s3;
  shl_u32 $s1, 0x100011, WAVESIZE;
  shl_s32 $s1, 0x100011, $s3;
  shl_s64 $d1, WAVESIZE, $s3;
  shl_u8x4 $s1, $s2, $s3;
  shl_s8x4 $s1, $s2, 0x34567a;
  shl_u8x8 $d1, $d2, $s3;
  shl_u16x2 $s1, $s2, $s3;
  shl_s16x2 $s1, $s2, 0x34567a;
  shl_u16x4 $d1, $d2, $s3;
  shl_u8x4 $s1, 0x100011, $s3;
  shl_s8x4 $s1, 0x100011, 0x34567a;
  shl_u8x8 $d1, 0x1703a, $s3;
  shl_u16x2 $s1, 0x100011, $s3;
  shl_s16x2 $s1, 0x100011, 0x34567a;
  shl_u16x4 $d1, 0x1703a, $s3;
  //shl_u64 $d1, $d2, 2;
  shr_u32 $s1, $s2, $s3;
  shr_s32 $s1, $s2, 0x3456a;
  shr_u64 $d1, $d2, $s3;
  shr_u32 $s1, 0x100011, WAVESIZE;
  shr_s32 $s1, 0x100011, $s3;
  shr_s64 $d1, WAVESIZE, $s3;
  shr_u8x4 $s1, $s2, $s3;
  shr_s8x4 $s1, $s2, 0x345678b;
  shr_u8x8 $d1, $d2, $s3;
  shr_u16x2 $s1, $s2, $s3;
  shr_s16x2 $s1, $s2, 0x345678b;
  shr_u16x4 $d1, $d2, $s3;
  shr_u8x4 $s1, 0x100011, $s3;
  shr_s8x4 $s1, 0x100011, 0x345678b;
  shr_u8x8 $d1, 0x1703a, $s3;
  shr_u16x2 $s1, 0x100011, $s3;
  shr_s16x2 $s1, 0x100011, 0x345678b;
  shr_u16x4 $d1, 0x1703a, $s3;
  //shr_s8x8 $d1, $d2, 2;
  and_b1 $c1, $c2, $c3;
  and_b32 $s1, $s2, 0x56123c;
  and_b64 $d1, $d2, WAVESIZE;
  and_b1 $c1, 1, $c3;
  and_b32 $s1, 0x100011, 0x56123c;
  and_b64 $d1, 0x1703a, WAVESIZE;
  and_b1 $c1, WAVESIZE, $c3;
  and_b32 $s1, WAVESIZE, 0x56123c;
  and_b64 $d1, WAVESIZE, WAVESIZE;
  or_b1 $c1, $c2, 1;
  or_b32 $s1, $s2, WAVESIZE;
  or_b64 $d1, $d2, $d3;
  or_b1 $c1, 1, 1;
  or_b32 $s1, 0x100011, WAVESIZE;
  or_b64 $d1, 0x1703a, $d3;
  or_b1 $c1, WAVESIZE, 1;
  or_b32 $s1, WAVESIZE, WAVESIZE;
  or_b64 $d1, WAVESIZE, $d3;
  xor_b1 $c1, $c2, WAVESIZE;
  xor_b32 $s1, $s2, $s3;
  xor_b64 $d1, $d2, 0x56789c;
  xor_b1 $c1, 1, WAVESIZE;
  xor_b32 $s1, 0x100011, $s3;
  xor_b64 $d1, 0x1703a, 0x56789c;
  xor_b1 $c1, WAVESIZE, WAVESIZE;
  xor_b32 $s1, WAVESIZE, $s3;
  xor_b64 $d1, WAVESIZE, 0x56789c;
  unpacklo_s8x4 $s1, $s2, $s3;
  unpacklo_u8x4 $s1, $s2, 72;
  unpacklo_s16x2 $s1, $s2, $s3;
  unpacklo_u16x2 $s1, $s2, 72;
  unpacklo_f16x2 $s1, $s2, $s3;
  unpacklo_s16x4 $d1, $d2, 72;
  unpacklo_u16x4 $d1, $d2, $d3;
  unpacklo_f16x4 $d1, $d2, 72;
  unpacklo_s32x2 $d1, $d2, $d3;
  unpacklo_u32x2 $d1, $d2, 72;
  unpacklo_f32x2 $d1, $d2, $d3;
  unpacklo_s8x4 $s1, 0x1703a, 72;
  unpacklo_u8x4 $s1, 0x1703a, $s3;
  unpacklo_s16x2 $s1, 0x1703a, 72;
  unpacklo_u16x2 $s1, 0x1703a, $s3;
  unpacklo_f16x2 $s1, 1.0f, 72;
  unpacklo_s16x4 $d1, 0x1703a, $d3;
  unpacklo_u16x4 $d1, 0x1703a, 72;
  unpacklo_f16x4 $d1, 1.0f, $d3;
  unpacklo_s32x2 $d1, 0x1703a, 72;
  unpacklo_u32x2 $d1, 0x1703a, $d3;
  unpacklo_f32x2 $d1, 1.0f, 72.0f;
  unpackhi_s8x4 $s1, $s2, $s3;
  unpackhi_u8x4 $s1, $s2, 72;
  unpackhi_s16x2 $s1, $s2, $s3;
  unpackhi_u16x2 $s1, $s2, 72;
  unpackhi_f16x2 $s1, $s2, $s3;
  unpackhi_s16x4 $d1, $d2, 72;
  unpackhi_u16x4 $d1, $d2, $d3;
  unpackhi_f16x4 $d1, $d2, 72;
  unpackhi_s32x2 $d1, $d2, $d3;
  unpackhi_u32x2 $d1, $d2, 72;
  unpackhi_f32x2 $d1, $d2, $d3;
  unpackhi_s8x4 $s1, 0x1703a, 72;
  unpackhi_u8x4 $s1, 0x1703a, $s3;
  unpackhi_s16x2 $s1, 0x1703a, 72;
  unpackhi_u16x2 $s1, 0x1703a, $s3;
  unpackhi_f16x2 $s1, 1.0f, 72.0f;
  unpackhi_s16x4 $d1, 0x1703a, $d3;
  unpackhi_u16x4 $d1, 0x1703a, 72;
  unpackhi_f16x4 $d1, 1.0f, $d3;
  unpackhi_s32x2 $d1, 0x1703a, 72;
  unpackhi_u32x2 $d1, 0x1703a, $d3;
  unpackhi_f32x2 $d1, 1.0f, 72.0f;
  movd_lo_b64 $d1, $d2, $s3;
  //movd_lo_b64 $d1, $d2, 23;
  //movd_lo_b64 $d1, 23, $s3;
  movd_hi_b64 $d1, $d2, $s3;
  //movd_hi_b64 $d1, $d2, 23;
  //movd_hi_b64 $d1, 23, $s3;
  copysign_f32 $s1, $s2, $s3;
  copysign_f32 $s1, $s2, 7.2f;
  copysign_f64 $d1, $d2, $d3;
  copysign_f64 $d1, $d2, 7.2;
  copysign_f32 $s1, 1.0f, $s3;
  copysign_f32 $s1, 1.0f, 7.2f;
  copysign_f64 $d1, 1.0, $d3;
  copysign_f64 $d1, 1.0, 7.2;
  add_up_f32 $s1, 0.5f, $s3;
  add_down_f64 $d1, 0.5, $d3;
  add_ftz_near_f32 $s1, $s2, $s3;
  add_ftz_up_f32 $s1, $s2, 12.0f;
  add_ftz_down_f64 $d1, $d2, $d3;
  div_up_f32 $s1, 72.0f, $s3;
  div_down_f64 $d1, $d2, $d3;
  div_ftz_near_f32 $s1, 72.0f, 0.5f;
  div_ftz_up_f32 $s1, 72.0f, $s3;
  div_ftz_down_f64 $d1, $d2, $d3;
  sub_up_f32 $s1, 72.0f, $s3;
  sub_down_f64 $d1, $d2, $d3;
  sub_ftz_f32 $s1, 72.0f, $s3;
  sub_ftz_near_f64 $d1, 72.0, 1.5;
  sub_ftz_up_f32 $s1, 72.0f, $s3;
  sub_ftz_down_f64 $d1, $d2, $d3;
  add_near_f32 $s1, $s2, $s3;
  add_near_f64 $d1, $d2, 0.5;
  add_near_f32 $s1, 72.0f, $s3;
  add_near_f64 $d1, 72.0, $d3;
  div_near_f32 $s1, $s2, $s3;
  div_near_f64 $d1, $d2, 1.5;
  div_near_f64 $d1, 72.0, $d3;
  sub_near_f32 $s1, $s2, $s3;
  sub_near_f64 $d1, 72.0, $d3;

//instruction5
  f2u4_u32 $s1, $s2, $s2, $s2, $s2;
  f2u4_u32 $s1, $s2, $s3, $s4, $s9;
  f2u4_u32 $s1, $s2, $s3, $s9, $s3;
  f2u4_u32 $s1, $s2, $s3, $s9, 1.0f;
  f2u4_u32 $s1, $s2, $s9, 1.0f, 1.0f;
  f2u4_u32 $s1, $s2, 1.0f, 1.0f, 1.0f;
  f2u4_u32 $s1, 1.0f, 1.0f, 1.0f, 1.0f;
  f2u4_u32 $s1, $s2, $s3, $s9, WAVESIZE;
  f2u4_u32 $s1, $s2, $s3, WAVESIZE, WAVESIZE;
  f2u4_u32 $s1, $s2, WAVESIZE, WAVESIZE, WAVESIZE;
  f2u4_u32 $s1, WAVESIZE, WAVESIZE, WAVESIZE, WAVESIZE;
  f2u4_u32 $s1, $s2, $s3, 1.0f, WAVESIZE;
  f2u4_u32 $s1, $s2, 1.0f, 1.0f, WAVESIZE;
  f2u4_u32 $s1, $s2, 1.0f, WAVESIZE, WAVESIZE;

//instruction4
  mad_s32 $s1, $s2, $s3, $s4;
  mad_s32 $s1, $s2, $s3, 1;
  mad_s32 $s1, $s2, $s3, WAVESIZE;
  mad_s32 $s1, $s2, 1, $s4;
  mad_s32 $s1, $s2, 1, 1;
  mad_s32 $s1, $s2, 1, WAVESIZE;
  mad_s32 $s1, $s2, WAVESIZE, $s4;
  mad_s32 $s1, $s2, WAVESIZE, 1;
  mad_s32 $s1, $s2, WAVESIZE, WAVESIZE;
  mad_s64 $d1, 1, $d3, $d4;
  mad_s64 $d1, 1, $d3, 1;
  mad_s64 $d1, 1, $d3, WAVESIZE;
  mad_s64 $d1, 1, 1, $d4;
  mad_s64 $d1, 1, 1, 1;
  mad_s64 $d1, 1, 1, WAVESIZE;
  mad_s64 $d1, 1, WAVESIZE, $d4;
  mad_s64 $d1, 1, WAVESIZE, 1;
  mad_s64 $d1, 1, WAVESIZE, WAVESIZE;
  mad_u32 $s1, WAVESIZE, $s3, $s4;
  mad_u32 $s1, WAVESIZE, $s3, 1;
  mad_u32 $s1, WAVESIZE, $s3, WAVESIZE;
  mad_u32 $s1, WAVESIZE, 1, $s4;
  mad_u32 $s1, WAVESIZE, 1, 1;
  mad_u64 $d1, WAVESIZE, 1, WAVESIZE;
  mad_u64 $d1, WAVESIZE, WAVESIZE, $d4;
  mad_u64 $d1, WAVESIZE, WAVESIZE, 1;
  mad_u64 $d1, WAVESIZE, WAVESIZE, WAVESIZE;
  mad_ftz_f32 $s1, $s2, $s3, 1.0f;
  mad_ftz_f64 $d1, $d2, 1.0, $d4;
  mad_near_f32 $s1, 1.0f, $s3, $s4;
  mad_near_f64 $d1, 1.0, $d3, 1.0;
  mad_zero_f32 $s1, 1.0f, 1.0f, 1.0f;
  mad_zero_f64 $d1, $d2, $d3, $d4;
  mad_up_f32 $s1, $s2, 1.0f, $s4;
  mad_up_f64 $d1, $d2, 1.0, 1.0;
  mad_down_f32 $s1, 1.0f, $s3, 1.0f;
  mad_down_f64 $d1, 1.0, 1.0, $d4;
  mad_ftz_zero_f32 $s1, $s2, $s3, $s4;
  mad_ftz_zero_f64 $d1, $d2, $d3, 1.0;
  mad_ftz_up_f32 $s1, $s2, 1.0f, 1.0f;
  mad_ftz_up_f64 $d1, 1.0, $d3, $d4;
  mad_ftz_down_f32 $s1, 1.0f, 1.0f, $s4;
  mad_ftz_down_f64 $d1, 1.0, 1.0, 1.0;
  insert_b32 $s1, $s2, $s3, $s4;
  insert_b32 $s1, $s2, $s3, WAVESIZE;
  insert_b32 $s1, $s2, 1, WAVESIZE;
  insert_b32 $s1, $s2, WAVESIZE, $s4;
  insert_b64 $d1, 1, 1, $d4;
  insert_b64 $d1, 1, WAVESIZE, 1;
  insert_b64 $d1, 1, WAVESIZE, WAVESIZE;
  insert_b32 $s1, WAVESIZE, $s3, $s4;
  insert_b64 $d1, WAVESIZE, 1, 1;
  insert_b64 $d1, WAVESIZE, WAVESIZE, 1;
  extract_b32 $s1, $s2, $s3, $s4;
  extract_b64 $d1, 1, $s3, $s4;
  extract_b32 $s1, WAVESIZE, $s3, $s4;
  bitselect_b32 $s1, $s2, $s3, $s4;
  bitselect_b32 $s1, $s2, 1, WAVESIZE;
  bitselect_b32 $s1, $s2, WAVESIZE, WAVESIZE;
  bitselect_b64 $d1, 1, $d3, $d4;
  bitselect_b64 $d1, 1, $d3, 1;
  bitselect_b64 $d1, 1, $d3, WAVESIZE;
  bitselect_b64 $d1, 1, 1, $d4;
  bitselect_b64 $d1, 1, WAVESIZE, WAVESIZE;
  bitselect_b32 $s1, WAVESIZE, $s3, $s4;
  bitselect_b32 $s1, WAVESIZE, $s3, 1;
  shuffle_s8x4 $s1, $s2, $s3, 0x55;
  shuffle_u8x4 $s1, $s2, 1, 0x55;
  shuffle_s16x2 $s1, 1, $s3, 0x55;
  shuffle_u16x2 $s1, 1, 1, 0x55;
  shuffle_s8x8 $d1, $d2, $d3, 0x55;
  shuffle_u8x8 $d1, $d2, 1, 0x55;
  shuffle_s16x4 $d1, 1, $d3, 0x55;
  shuffle_u16x4 $d1, 1, 1, 0x55;
  shuffle_f32x2 $d1, $d2, $d3, 2.0;
  shuffle_f16x2 $s1, $s2, 1.0f, 2.0f;
  shuffle_f16x4 $d1, 1.0, $d3, 2.0;
  cmov_b1 $c1, $c2, $c3, $c4;
  cmov_b1 $c1, $c2, $c3, 1;
  cmov_b32 $s1, $c2, 1, $s4;
  cmov_b32 $s1, $c2, 1, 1;
  cmov_b32 $s1, 1, $s3, $s4;
  cmov_b64 $d1, 0, $d2, 0;
  cmov_b64 $d1, 1, 1, $d4;
  cmov_b64 $d1, 1, 1, 1;
  cmov_s8x4 $s1, $s2, $s3, $s4;
  cmov_u8x4 $s1, $s2, $s3, 1;
  cmov_s16x2 $s1, $s2, 1, $s4;
  cmov_u16x2 $s1, $s2, 1, 1;
  cmov_s8x8 $d1, 1, $d3, $d4;
  cmov_u8x8 $d1, 1, $d3, 1;
  cmov_s16x4 $d1, 1, 1, $d4;
  cmov_u16x4 $d1, 1, 1, 1;
  cmov_s32x2 $d1, $d2, $d3, $d4;
  cmov_u32x2 $d1, $d2, $d3, 1;
  cmov_f16x2 $s1, $s2, 1.0f, $s4;
  cmov_f16x4 $d1, $d2, 1.0, 1.0;
  cmov_f32x2 $d1, 1.0, $d3, $d4;
  fma_ftz_f32 $s1, $s2, $s3, 1.0f;
  fma_ftz_f64 $d1, $d2, 1.0, $d4;
  fma_near_f32 $s1, 1.0f, $s3, $s4;
  fma_near_f64 $d1, 1.0, $d3, 1.0;
  fma_zero_f32 $s1, 1.0f, 1.0f, 1.0f;
  fma_zero_f64 $d1, $d2, $d3, $d4;
  fma_up_f32 $s1, $s2, 1.0f, $s4;
  fma_up_f64 $d1, $d2, 1.0, 1.0;
  fma_down_f32 $s1, 1.0f, $s3, 1.0f;
  fma_down_f64 $d1, 1.0, 1.0, $d4;
  fma_ftz_zero_f32 $s1, $s2, $s3, $s4;
  fma_ftz_zero_f64 $d1, $d2, $d3, 1.0;
  fma_ftz_up_f32 $s1, $s2, 1.0f, 1.0f;
  fma_ftz_up_f64 $d1, 1.0, $d3, $d4;
  fma_ftz_down_f32 $s1, 1.0f, 1.0f, $s4;
  fma_ftz_down_f64 $d1, 1.0, 1.0, 1.0;
  bitalign_b32 $s1, $s2, $s3, $s4;
  bitalign_b32 $s1, $s2, $s3, 8;
  bitalign_b32 $s1, $s2, $s3, WAVESIZE;
  bitalign_b32 $s1, $s2, 8, $s4;
  bitalign_b32 $s1, $s2, WAVESIZE, $s4;
  bitalign_b32 $s1, 8, $s3, $s4;
  bitalign_b32 $s1, WAVESIZE, $s3, $s4;
  bytealign_b32 $s1, $s2, $s3, $s4;
  bytealign_b32 $s1, $s2, $s3, 1;
  bytealign_b32 $s1, $s2, $s3, WAVESIZE;
  bytealign_b32 $s1, $s2, 1, $s4;
  bytealign_b32 $s1, $s2, WAVESIZE, $s4;
  bytealign_b32 $s1, 1, $s3, $s4;
  bytealign_b32 $s1, WAVESIZE, $s3, $s4;
  lerp_b32 $s1, $s2, $s3, $s4;
  lerp_b32 $s1, $s2, $s3, 1;
  lerp_b32 $s1, $s2, $s3, WAVESIZE;
  lerp_b32 $s1, $s2, 1, $s4;
  lerp_b32 $s1, $s2, WAVESIZE, $s4;
  lerp_b32 $s1, 1, $s3, $s4;
  lerp_b32 $s1, WAVESIZE, $s3, $s4;
  sad_b32 $s1, $s2, $s3, $s4;
  sad_b32 $s1, $s2, $s3, 1;
  sad_b32 $s1, $s2, $s3, WAVESIZE;
  sad_b32 $s1, $s2, 1, $s4;
  sad_b32 $s1, $s2, WAVESIZE, $s4;
  sad_b32 $s1, 1, $s3, $s4;
  sad_b32 $s1, WAVESIZE, $s3, $s4;
  sad2_b32 $s1, $s2, $s3, $s4;
  sad2_b32 $s1, $s2, $s3, 1;
  sad2_b32 $s1, $s2, $s3, WAVESIZE;
  sad2_b32 $s1, $s2, 1, $s4;
  sad2_b32 $s1, $s2, WAVESIZE, $s4;
  sad2_b32 $s1, 1, $s3, $s4;
  sad2_b32 $s1, WAVESIZE, $s3, $s4;
  sad4_b32 $s1, $s2, $s3, $s4;
  sad4_b32 $s1, $s2, $s3, 1;
  sad4_b32 $s1, $s2, $s3, WAVESIZE;
  sad4_b32 $s1, $s2, 1, $s4;
  sad4_b32 $s1, $s2, WAVESIZE, $s4;
  sad4_b32 $s1, 1, $s3, $s4;
  sad4_b32 $s1, WAVESIZE, $s3, $s4;
  sad4hi_b32 $s1, $s2, $s3, $s4;
  sad4hi_b32 $s1, $s2, $s3, 1;
  sad4hi_b32 $s1, $s2, $s3, WAVESIZE;
  sad4hi_b32 $s1, $s2, 1, $s4;
  sad4hi_b32 $s1, $s2, WAVESIZE, $s4;
  sad4hi_b32 $s1, 1, $s3, $s4;
  sad4hi_b32 $s1, WAVESIZE, $s3, $s4;

//bar
  barrier;
  barrier_global;
  barrier_group;
  barrier_partial;
  barrier_width(64);
  barrier_width(64)_global;
  barrier_width(64)_group;
  barrier_width(64)_partial;
  barrier_width(all);
  barrier_width(all)_global;
  barrier_width(all)_group;
  barrier_width(all)_partial;

//cmp
  cmp_eq_b1_b1 $c1, $c2, $c3;
  cmp_eq_b1_b32 $c1, $s2, 0;
  cmp_eq_b1_b64 $c1, $d2, WAVESIZE;
  cmp_eq_b1_u32 $c1, 1, $s3;
  cmp_eq_b1_u64 $c1, 1, 0;
  cmp_eq_b1_s32 $c1, 1, WAVESIZE;
  cmp_eq_b1_s64 $c1, WAVESIZE, $d3;
  cmp_eq_b32_b1 $s1, $c2, $c3;
  cmp_eq_b32_b32 $s1, $s2, 0;
  cmp_eq_b32_b64 $s1, $d2, WAVESIZE;
  cmp_eq_b32_u32 $s1, 1, $s3;
  cmp_eq_b32_u64 $s1, 1, 0;
  cmp_eq_b32_s32 $s1, 1, WAVESIZE;
  cmp_eq_b32_s64 $s1, WAVESIZE, $d3;
  cmp_eq_u32_b1 $s1, $c2, $c3;
  cmp_eq_u32_b32 $s1, $s2, 0;
  cmp_eq_u32_b64 $s1, $d2, WAVESIZE;
  cmp_eq_u32_u32 $s1, 1, $s3;
  cmp_eq_u32_u64 $s1, 1, 0;
  cmp_eq_u32_s32 $s1, 1, WAVESIZE;
  cmp_eq_u32_s64 $s1, WAVESIZE, $d3;
  cmp_eq_s32_b1 $s1, $c2, $c3;
  cmp_eq_s32_b32 $s1, $s2, 0;
  cmp_eq_s32_b64 $s1, $d2, WAVESIZE;
  cmp_eq_s32_u32 $s1, 1, $s3;
  cmp_eq_s32_u64 $s1, 1, 0;
  cmp_eq_s32_s32 $s1, 1, WAVESIZE;
  cmp_eq_s32_s64 $s1, WAVESIZE, $d3;
  cmp_eq_f32_b1 $s1, $c2, $c3;
  cmp_eq_f32_b32 $s1, $s2, 0;
  cmp_eq_f32_u32 $s1, 1, $s3;
  cmp_eq_f32_u64 $s1, 1, 0;

//cvt
  cvt_b1_b1 $c1, $c2;
  cvt_u8_b1 $s1, $c2;
  cvt_s8_b1 $s1, $c2;
  cvt_b1_u8 $c1, $s2;
  cvt_u16_u8 $s1, $s2;
  cvt_s16_u8 $s1, $s2;
  cvt_b1_s8 $c1, $s2;
  cvt_u32_s8 $s1, $s2;
  cvt_s32_s8 $s1, $s2;
  cvt_f32_s8 $s1, $s2;
  cvt_f32_s8 $s1, $s2;
  cvt_u64_u16 $d1, $s2;
  cvt_s64_u16 $d1, $s2;
  cvt_f64_u16 $d1, $s2;
  cvt_u8_s16 $s1, $s2;
  cvt_s8_s16 $s1, $s2;
  cvt_u8_u32 $s1, $s2;
  cvt_s8_u32 $s1, $s2;
  cvt_u16_s32 $s1, $s2;
  cvt_s16_s32 $s1, $s2;
  cvt_u32_f32 $s1, $s2;
  cvt_s32_f32 $s1, $s2;
  cvt_f32_f32 $s1, $s2;
  cvt_u64_u64 $d1, $d2;
  cvt_s64_u64 $d1, $d2;
  cvt_f64_u64 $d1, $d2;
  cvt_u8_s64 $s1, $d2;
  cvt_s8_s64 $s1, $d2;
  cvt_u16_f64 $s1, $d2;
  cvt_s16_f64 $s1, $d2;
  cvt_up_f32_f64 $s1, $d2;
  cvt_down_f32_f64 $s1, $d2;
  cvt_zero_f32_f64 $s1, $d2;
  cvt_up_u32_f64 $s1, $d2;
  cvt_down_s32_f64 $s1, $d2;
  cvt_ftz_f64_f64 $d1, $d2;
  cvt_ftz_up_f32_f64 $s1, $d2;
  cvt_ftz_down_f32_f64 $s1, $d2;
  cvt_ftz_zero_f32_f64 $s1, $d2;
  cvt_ftz_up_u32_f64 $s1, $d2;
  cvt_ftz_down_s32_f64 $s1, $d2;

//mov
  mov_b1 $c1, $c2;
  mov_b32 $s1, $s2;
  mov_b32 $s1, 1.0f;
  //mov_b64 $d1, ($s1, $s2);
  //mov_b64 ($s1, $s2), $d3;
  //mov_b128 $q1, ($s1, $s2, $s3, $s4);
  //mov_b128 ($s1, $s2, $s3, $s4), $q1;

//mul
  mul_s32 $s1, $s2, $s3;
  mul_s32 $s1, $s2, 1;
  mul_s32 $s1, $s2, WAVESIZE;
  mul_s32 $s1, 1, $s3;
  mul_s32 $s1, 1, 1;
  mul_s32 $s1, 1, WAVESIZE;
  mul_s32 $s1, WAVESIZE, $s3;
  mul_s32 $s1, WAVESIZE, 1;
  mul_s32 $s1, WAVESIZE, WAVESIZE;
  mul_s64 $d1, $d2, $d3;
  mul_s64 $d1, $d2, 1;
  mul_s64 $d1, $d2, WAVESIZE;
  mul_s64 $d1, 1, $d3;
  mul_s64 $d1, 1, 1;
  mul_s64 $d1, 1, WAVESIZE;
  mul_s64 $d1, WAVESIZE, $d3;
  mul_s64 $d1, WAVESIZE, 1;
  mul_s64 $d1, WAVESIZE, WAVESIZE;
  mul_u32 $s1, $s2, $s3;
  mul_u32 $s1, $s2, 1;
  mul_u32 $s1, $s2, WAVESIZE;
  mul_u32 $s1, 1, $s3;
  mul_u32 $s1, 1, 1;
  mul_u32 $s1, 1, WAVESIZE;
  mul_u32 $s1, WAVESIZE, $s3;
  mul_u32 $s1, WAVESIZE, 1;
  mul_u32 $s1, WAVESIZE, WAVESIZE;
  mul_u64 $d1, $d2, $d3;
  mul_u64 $d1, $d2, 1;
  mul_u64 $d1, $d2, WAVESIZE;
  mul_u64 $d1, 1, $d3;
  mul_u64 $d1, 1, 1;
  mul_u64 $d1, 1, WAVESIZE;
  mul_u64 $d1, WAVESIZE, $d3;
  mul_u64 $d1, WAVESIZE, 1;
  mul_u64 $d1, WAVESIZE, WAVESIZE;
  mul_pp_u8x4 $s1, $s2, $s3;
  mul_pp_sat_s8x4 $s1, $s2, $s3;
  mul_ps_u16x2 $s1, $s2, $s3;
  mul_ps_sat_s16x2 $s1, $s2, $s3;
  mul_sp_u8x4 $s1, $s2, $s3;
  mul_sp_sat_s8x4 $s1, $s2, $s3;
  mul_ss_u16x2 $s1, $s2, $s3;
  mul_ss_sat_s16x2 $s1, $s2, $s3;
  mul_pp_f16x2 $s1, $s2, $s3;
  mul_ps_f16x2 $s1, $s2, $s3;
  mul_sp_f16x2 $s1, $s2, $s3;
  mul_ss_f16x2 $s1, $s2, $s3;
  mul_pp_u8x8 $d1, $d2, $d3;
  mul_pp_sat_s8x8 $d1, $d2, $d3;
  mul_ps_u16x4 $d1, $d2, $d3;
  mul_ps_sat_s16x4 $d1, $d2, $d3;
  mul_sp_u8x8 $d1, $d2, $d3;
  mul_sp_sat_s8x8 $d1, $d2, $d3;
  mul_ss_u16x4 $d1, $d2, $d3;
  mul_ss_sat_s16x4 $d1, $d2, $d3;
  mul_pp_f16x4 $d1, $d2, $d3;
  mul_ps_f32x2 $d1, $d2, $d3;
  mul_sp_f16x4 $d1, $d2, $d3;
  mul_ss_f32x2 $d1, $d2, $d3;
  mul_hi_s32 $s1, $s2, $s3;
  mul_hi_s32 $s1, $s2, 1;
  mul_hi_s32 $s1, $s2, WAVESIZE;
  mul_hi_s32 $s1, 1, $s3;
  mul_hi_s32 $s1, 1, 1;
  mul_hi_s32 $s1, 1, WAVESIZE;
  mul_hi_s32 $s1, WAVESIZE, $s3;
  mul_hi_s32 $s1, WAVESIZE, 1;
  mul_hi_s32 $s1, WAVESIZE, WAVESIZE;
  mul_hi_u32 $s1, $s2, $s3;
  mul_hi_u32 $s1, $s2, 1;
  mul_hi_u32 $s1, $s2, WAVESIZE;
  mul_hi_u32 $s1, 1, $s3;
  mul_hi_u32 $s1, 1, 1;
  mul_hi_u32 $s1, 1, WAVESIZE;
  mul_hi_u32 $s1, WAVESIZE, $s3;
  mul_hi_u32 $s1, WAVESIZE, 1;
  mul_hi_u32 $s1, WAVESIZE, WAVESIZE;
  mul_hi_pp_u8x4 $s1, $s2, $s3;
  mul_hi_pp_s8x4 $s1, $s2, $s3;
  mul_hi_pp_u16x2 $s1, $s2, $s3;
  mul_hi_pp_s16x2 $s1, $s2, $s3;
  mul_hi_ps_u8x4 $s1, $s2, $s3;
  mul_hi_ps_s8x4 $s1, $s2, $s3;
  mul_hi_ps_u16x2 $s1, $s2, $s3;
  mul_hi_ps_s16x2 $s1, $s2, $s3;
  mul_hi_sp_u8x4 $s1, $s2, $s3;
  mul_hi_sp_s8x4 $s1, $s2, $s3;
  mul_hi_sp_u16x2 $s1, $s2, $s3;
  mul_hi_sp_s16x2 $s1, $s2, $s3;
  mul_hi_ss_u8x4 $s1, $s2, $s3;
  mul_hi_ss_s8x4 $s1, $s2, $s3;
  mul_hi_ss_u16x2 $s1, $s2, $s3;
  mul_hi_ss_s16x2 $s1, $s2, $s3;
  mul_ftz_f32 $s1, $s2, $s3;
  mul_ftz_f64 $d1, $d2, 1.0;
  mul_near_f32 $s1, 1.0f, $s3;
  mul_near_f64 $d1, 1.0, 1.0;
  mul_zero_f32 $s1, $s2, $s3;
  mul_zero_f64 $d1, $d2, 1.0;
  mul_up_f32 $s1, 1.0f, $s3;
  mul_up_f64 $d1, 1.0, 1.0;
  mul_down_f32 $s1, $s2, $s3;
  mul_down_f64 $d1, $d2, 1.0;
  mul_ftz_zero_f32 $s1, 1.0f, $s3;
  mul_ftz_zero_f64 $d1, 1.0, 1.0;
  mul_ftz_up_f32 $s1, $s2, $s3;
  mul_ftz_up_f64 $d1, $d2, 1.0;
  mul_ftz_down_f32 $s1, 1.0f, $s3;
  mul_ftz_down_f64 $d1, 1.0, 1.0;
  mul24_s32 $s1, $s2, $s3;
  mul24_s32 $s1, $s2, 1;
  mul24_s32 $s1, $s2, WAVESIZE;
  mul24_s64 $d1, 1, $d3;
  mul24_s64 $d1, 1, 1;
  mul24_s64 $d1, 1, WAVESIZE;
  mul24_u32 $s1, WAVESIZE, $s3;
  mul24_u32 $s1, WAVESIZE, 1;
  mul24_u32 $s1, WAVESIZE, WAVESIZE;
  mul24_u64 $d1, $d2, $d3;
  mul24_u64 $d1, $d2, 1;
  mul24_u64 $d1, $d2, WAVESIZE;
  mad24_hi_s32 $s1, $s2, $s3, $s4;
  mad24_hi_s32 $s1, $s2, $s3, 1;
  mad24_hi_s32 $s1, $s2, $s3, WAVESIZE;
  mad24_hi_s32 $s1, $s2, 1, $s4;
  mad24_hi_s32 $s1, $s2, 1, 1;
  mad24_hi_s32 $s1, $s2, 1, WAVESIZE;
  mad24_hi_s32 $s1, $s2, WAVESIZE, $s4;
  mad24_hi_s32 $s1, $s2, WAVESIZE, 1;
  mad24_hi_s32 $s1, $s2, WAVESIZE, WAVESIZE;
  mad24_hi_s64 $d1, 1, $d3, $d4;
  mad24_hi_s64 $d1, 1, $d3, 1;
  mad24_hi_s64 $d1, 1, $d3, WAVESIZE;
  mad24_hi_s64 $d1, 1, 1, $d4;
  mad24_hi_s64 $d1, 1, 1, 1;
  mad24_hi_s64 $d1, 1, 1, WAVESIZE;
  mad24_hi_s64 $d1, 1, WAVESIZE, $d4;
  mad24_hi_s64 $d1, 1, WAVESIZE, 1;
  mad24_hi_s64 $d1, 1, WAVESIZE, WAVESIZE;
  mad24_hi_u32 $s1, WAVESIZE, $s3, $s4;
  mad24_hi_u32 $s1, WAVESIZE, $s3, 1;
  mad24_hi_u32 $s1, WAVESIZE, $s3, WAVESIZE;
  mad24_hi_u32 $s1, WAVESIZE, 1, $s4;
  mad24_hi_u32 $s1, WAVESIZE, 1, 1;
  mad24_hi_u64 $d1, WAVESIZE, 1, WAVESIZE;
  mad24_hi_u64 $d1, WAVESIZE, WAVESIZE, $d4;
  mad24_hi_u64 $d1, WAVESIZE, WAVESIZE, 1;
  mad24_hi_u64 $d1, WAVESIZE, WAVESIZE, WAVESIZE;

//segp
  ftos_global_u32 $s1,$s2;
  ftos_global_u32 $s1,61;
  ftos_global_u32 $s1,WAVESIZE;
  ftos_group_u32 $s1,$s2;
  ftos_group_u32 $s1,61;
  ftos_group_u32 $s1,WAVESIZE;
  ftos_private_u32 $s1,$s2;
  ftos_private_u32 $s1,61;
  ftos_private_u32 $s1,WAVESIZE;
  ftos_kernarg_u32 $s1,$s2;
  ftos_kernarg_u32 $s1,61;
  ftos_kernarg_u32 $s1,WAVESIZE;
  ftos_readonly_u32 $s1,$s2;
  ftos_readonly_u32 $s1,61;
  ftos_readonly_u32 $s1,WAVESIZE;
  ftos_spill_u32 $s1,$s2;
  ftos_spill_u32 $s1,61;
  ftos_spill_u32 $s1,WAVESIZE;
  ftos_arg_u32 $s1,$s2;
  ftos_arg_u32 $s1,61;
  ftos_arg_u32 $s1,WAVESIZE;
  ftos_global_u64 $d1,$d2;
  ftos_global_u64 $d1,61;
  ftos_global_u64 $d1,WAVESIZE;
  ftos_group_u64 $d1,$d2;
  ftos_group_u64 $d1,61;
  ftos_group_u64 $d1,WAVESIZE;
  ftos_private_u64 $d1,$d2;
  ftos_private_u64 $d1,61;
  ftos_private_u64 $d1,WAVESIZE;
  ftos_kernarg_u64 $d1,$d2;
  ftos_kernarg_u64 $d1,61;
  ftos_kernarg_u64 $d1,WAVESIZE;
  ftos_readonly_u64 $d1,$d2;
  ftos_readonly_u64 $d1,61;
  ftos_readonly_u64 $d1,WAVESIZE;
  ftos_spill_u64 $d1,$d2;
  ftos_spill_u64 $d1,61;
  ftos_spill_u64 $d1,WAVESIZE;
  ftos_arg_u64 $d1,$d2;
  ftos_arg_u64 $d1,61;
  ftos_arg_u64 $d1,WAVESIZE;
  stof_global_u32 $s1,$s2;
  stof_global_u32 $s1,61;
  stof_global_u32 $s1,WAVESIZE;
  stof_group_u32 $s1,$s2;
  stof_group_u32 $s1,61;
  stof_group_u32 $s1,WAVESIZE;
  stof_private_u32 $s1,$s2;
  stof_private_u32 $s1,61;
  stof_private_u32 $s1,WAVESIZE;
  stof_kernarg_u32 $s1,$s2;
  stof_kernarg_u32 $s1,61;
  stof_kernarg_u32 $s1,WAVESIZE;
  stof_readonly_u32 $s1,$s2;
  stof_readonly_u32 $s1,61;
  stof_readonly_u32 $s1,WAVESIZE;
  stof_spill_u32 $s1,$s2;
  stof_spill_u32 $s1,61;
  stof_spill_u32 $s1,WAVESIZE;
  stof_arg_u32 $s1,$s2;
  stof_arg_u32 $s1,61;
  stof_arg_u32 $s1,WAVESIZE;
  stof_global_u64 $d1,$d2;
  stof_global_u64 $d1,61;
  stof_global_u64 $d1,WAVESIZE;
  stof_group_u64 $d1,$d2;
  stof_group_u64 $d1,61;
  stof_group_u64 $d1,WAVESIZE;
  stof_private_u64 $d1,$d2;
  stof_private_u64 $d1,61;
  stof_private_u64 $d1,WAVESIZE;
  stof_kernarg_u64 $d1,$d2;
  stof_kernarg_u64 $d1,61;
  stof_kernarg_u64 $d1,WAVESIZE;
  stof_readonly_u64 $d1,$d2;
  stof_readonly_u64 $d1,61;
  stof_readonly_u64 $d1,WAVESIZE;
  stof_spill_u64 $d1,$d2;
  stof_spill_u64 $d1,61;
  stof_spill_u64 $d1,WAVESIZE;
  stof_arg_u64 $d1,$d2;
  stof_arg_u64 $d1,61;
  stof_arg_u64 $d1,WAVESIZE;

//st
  st_private_s8 $s1, [$s2];
  st_readonly_s16 $s1, [$s2 + 10];
  st_s8 $s1, [$s2];
  st_equiv(2)_s8 1, [$s3];
  st_equiv(1)_s16 1, [$s3 + 10];
  st_rel_s8 1, [$s3];
  //st_v4_s32 ($s1,$s2,$s3,$s4), [$s5];
  //st_v2_s32 ($s1,$s2), [$s3];

//sync
  sync_global ;
  sync_group;
  sync;
  sync_partial;

//syscall
  syscall $s1, 3, $s2, $s3, $s4;
  syscall $s1, 3, 4, 5, 6;
  syscall $s1, 3, WAVESIZE, WAVESIZE, WAVESIZE;
  syscall $s1, 3, $s2, 5, WAVESIZE;

//atom
  atomic_and_b32 $s1, [$s2], 23;
  atomic_and_global_b64 $d1, [$s2], $d2;
  atomic_and_group_u32 $s1, [$s2], WAVESIZE;
  atomic_and_group_acq_u64 $d1, [$s2], 23;
  atomic_and_global_ar_s32 $s1, [$s2], 23;
  atomic_and_global_part_ar_s64 $d1, [$s2], 23;
  atomic_or_b32 $s1, [$s2], 23;
  atomic_or_global_b64 $d1, [$s2], 23;
  atomic_or_group_u32 $s1, [$s2], 23;
  atomic_or_group_acq_u64 $d1, [$s2], 23;
  atomic_or_global_ar_s32 $s1, [$s2], 23;
  atomic_or_global_part_ar_s64 $d1, [$s2], 23;
  atomic_xor_b32 $s1, [$s2], 23;
  atomic_xor_global_b64 $d1, [$s2], 23;
  atomic_xor_group_u32 $s1, [$s2], 23;
  atomic_xor_group_acq_u64 $d1, [$s2], 23;
  atomic_xor_global_ar_s32 $s1, [$s2], 23;
  atomic_xor_global_part_ar_s64 $d1, [$s2], 23;
  atomic_exch_b32 $s1, [$s2], 23;
  atomic_exch_global_b64 $d1, [$s2], 23;
  atomic_exch_group_u32 $s1, [$s2], 23;
  atomic_exch_group_acq_u64 $d1, [$s2], 23;
  atomic_exch_global_ar_s32 $s1, [$s2], 23;
  atomic_exch_global_part_ar_s64 $d1, [$s2], 23;
  atomic_add_b32 $s1, [$s2], 23;
  atomic_add_global_b64 $d1, [$s2], 23;
  atomic_add_group_u32 $s1, [$s2], 23;
  atomic_add_group_acq_u64 $d1, [$s2], 23;
  atomic_add_global_ar_s32 $s1, [$s2], 23;
  atomic_add_global_part_ar_s64 $d1, [$s2], 23;
  atomic_sub_b32 $s1, [$s2], 23;
  atomic_sub_global_b64 $d1, [$s2], 23;
  atomic_sub_group_u32 $s1, [$s2], 23;
  atomic_sub_group_acq_u64 $d1, [$s2], 23;
  atomic_sub_global_ar_s32 $s1, [$s2], 23;
  atomic_sub_global_part_ar_s64 $d1, [$s2], 23;
  atomic_inc_b32 $s1, [$s2], 23;
  atomic_inc_global_b64 $d1, [$s2], 23;
  atomic_inc_group_u32 $s1, [$s2], 23;
  atomic_inc_group_acq_u64 $d1, [$s2], 23;
  atomic_inc_global_ar_s32 $s1, [$s2], 23;
  atomic_inc_global_part_ar_s64 $d1, [$s2], 23;
  atomic_dec_b32 $s1, [$s2], 23;
  atomic_dec_global_b64 $d1, [$s2], 23;
  atomic_dec_group_u32 $s1, [$s2], 23;
  atomic_dec_group_acq_u64 $d1, [$s2], 23;
  atomic_dec_global_ar_s32 $s1, [$s2], 23;
  atomic_dec_global_part_ar_s64 $d1, [$s2], 23;
  atomic_max_b32 $s1, [$s2], 23;
  atomic_max_global_b64 $d1, [$s2], 23;
  atomic_max_group_u32 $s1, [$s2], 23;
  atomic_max_group_acq_u64 $d1, [$s2], 23;
  atomic_max_global_ar_s32 $s1, [$s2], 23;
  atomic_max_global_part_ar_s64 $d1, [$s2], 23;
  atomic_min_b32 $s1, [$s2], 23;
  atomic_min_global_b64 $d1, [$s2], 23;
  atomic_min_group_u32 $s1, [$s2], 23;
  atomic_min_group_acq_u64 $d1, [$s2], 23;
  atomic_min_global_ar_s32 $s1, [$s2], 23;
  atomic_min_global_part_ar_s64 $d1, [$s2], 23;
  atomic_cas_b32 $s1, [$s2], 23, 12;
  atomic_cas_global_b64 $d1, [$s2], 23, 12;
  atomic_cas_group_u32 $s1, [$s2], 23, 12;
  atomic_cas_group_acq_u64 $d1, [$s2], 23, 12;
  atomic_cas_global_ar_s32 $s1, [$s2], 23, $s2;
  atomic_cas_global_part_ar_s64 $d1, [$s2], 23, WAVESIZE;
  atomicNoRet_and_b32 [$s2], 23;
  atomicNoRet_and_global_b64 [$s2], $d2;
  atomicNoRet_and_group_u32 [$s2], WAVESIZE;
  atomicNoRet_and_group_acq_u64 [$s2], 23;
  atomicNoRet_and_global_ar_s32 [$s2], 23;
  atomicNoRet_and_global_part_ar_s64 [$s2], 23;
  atomicNoRet_or_b32 [$s2],23;
  atomicNoRet_or_global_b64 [$s2], 23;
  atomicNoRet_or_group_u32 [$s2], 23;
  atomicNoRet_or_group_acq_u64 [$s2], 23;
  atomicNoRet_or_global_ar_s32 [$s2], 23;
  atomicNoRet_or_global_part_ar_s64 [$s2], 23;
  atomicNoRet_xor_b32 [$s2], 23;
  atomicNoRet_xor_global_b64 [$s2], 23;
  atomicNoRet_xor_group_u32 [$s2], 23;
  atomicNoRet_xor_group_acq_u64 [$s2], 23;
  atomicNoRet_xor_global_ar_s32 [$s2], 23;
  atomicNoRet_xor_global_part_ar_s64 [$s2], 23;
  atomicNoRet_add_b32 [$s2], 23;
  atomicNoRet_add_global_b64 [$s2], 23;
  atomicNoRet_add_group_u32 [$s2], 23;
  atomicNoRet_add_group_acq_u64 [$s2], 23;
  atomicNoRet_add_global_ar_s32 [$s2], 23;
  atomicNoRet_add_global_part_ar_s64 [$s2], 23;
  atomicNoRet_sub_b32 [$s2], 23;
  atomicNoRet_sub_global_b64 [$s2], 23;
  atomicNoRet_sub_group_u32 [$s2], 23;
  atomicNoRet_sub_group_acq_u64 [$s2], 23;
  atomicNoRet_sub_global_ar_s32 [$s2], 23;
  atomicNoRet_sub_global_part_ar_s64 [$s2], 23;
  atomicNoRet_inc_b32 [$s2], 23;
  atomicNoRet_inc_global_b64 [$s2], 23;
  atomicNoRet_inc_group_u32 [$s2], 23;
  atomicNoRet_inc_group_acq_u64 [$s2], 23;
  atomicNoRet_inc_global_ar_s32 [$s2], 23;
  atomicNoRet_inc_global_part_ar_s64 [$s2], 23;
  atomicNoRet_dec_b32 [$s2], 23;
  atomicNoRet_dec_global_b64 [$s2], 23;
  atomicNoRet_dec_group_u32 [$s2], 23;
  atomicNoRet_dec_group_acq_u64 [$s2], 23;
  atomicNoRet_dec_global_ar_s32 [$s2], 23;
  atomicNoRet_dec_global_part_ar_s64 [$s2], 23;
  atomicNoRet_max_b32 [$s2], 23;
  atomicNoRet_max_global_b64 [$s2], 23;
  atomicNoRet_max_group_u32 [$s2], 23;
  atomicNoRet_max_group_acq_u64 [$s2], 23;
  atomicNoRet_max_global_ar_s32 [$s2], 23;
  atomicNoRet_max_global_part_ar_s64 [$s2], 23;
  atomicNoRet_min_b32 [$s2], 23;
  atomicNoRet_min_global_b64 [$s2], 23;
  atomicNoRet_min_group_u32 [$s2], 23;
  atomicNoRet_min_group_acq_u64 [$s2], 23;
  atomicNoRet_min_global_ar_s32 [$s2], 23;
  atomicNoRet_min_global_part_ar_s64 [$s2], 23;
  atomicNoRet_cas_b32 [$s2], 23, 12;
  atomicNoRet_cas_global_b64 [$s2], 23, 12;
  atomicNoRet_cas_group_u32 [$s2], 23, 12;
  atomicNoRet_cas_group_acq_u64 [$s2], 23, 12;
  atomicNoRet_cas_global_ar_s32 [$s2], 23, $s2;
  atomicNoRet_cas_global_part_ar_s64 [$s2], 23, WAVESIZE;

//ld
  ld_u8 $s1, [$s2];
  ld_u16 $s1, [$s2];
  ld_width(1)_u8 $s1, [$s2];
  ld_global_u8 $s1, [$s2];
  ld_group_s8 $s1, [$s2];
  ld_kernarg_u16 $s1, [$s2];
  ld_readonly_u64 $d1,[$s2];
  ld_spill_s64 $d1, [$s2];
  ld_arg_f64 $d1, [$s2];
  ld_acq_u8 $s1, [$s2];
  ld_dep_s8 $s1, [$s2];
  ld_acq_u16 $s1, [$s2];
  ld_part_acq_s32 $s1, [$s2];
  ld_part_acq_u64 $d1, [$s2];
  ld_acq_s64 $d1, [$s2];
  ld_dep_f64 $d1, [$s2];
  ld_width(8)_kernarg_u16 $s1, [$s2];
  ld_width(16)_readonly_s16 $s1, [$s2];
  ld_private_u8 $s1, [$s2];
  //ld_v2_s32 ($s0,$s1), [$s2];
  //ld_v4_s32 ($s1,$s2,$s3,$s4), [$s5];

//lda
  lda_u32 $s1, [$s2];
  lda_u32 $s1, [$s2];
  lda_u32 $s1, [$s2];
  lda_u32 $s1, [$s2 + 10];
  lda_u32 $s1, [$s2 - 5];
  lda_u32 $s1, [$s2];

  ret;
};
